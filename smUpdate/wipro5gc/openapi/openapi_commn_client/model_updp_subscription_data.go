/*
Namf_Communication

AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_commn_client

import (
	"encoding/json"
)

// checks if the UpdpSubscriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdpSubscriptionData{}

// UpdpSubscriptionData UE policy delivery related N1 message notification subscription data.
type UpdpSubscriptionData struct {
	UpdpNotifySubscriptionId string `json:"updpNotifySubscriptionId"`
	UpdpNotifyCallbackUri string `json:"updpNotifyCallbackUri"`
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewUpdpSubscriptionData instantiates a new UpdpSubscriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdpSubscriptionData(updpNotifySubscriptionId string, updpNotifyCallbackUri string) *UpdpSubscriptionData {
	this := UpdpSubscriptionData{}
	this.UpdpNotifySubscriptionId = updpNotifySubscriptionId
	this.UpdpNotifyCallbackUri = updpNotifyCallbackUri
	return &this
}

// NewUpdpSubscriptionDataWithDefaults instantiates a new UpdpSubscriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdpSubscriptionDataWithDefaults() *UpdpSubscriptionData {
	this := UpdpSubscriptionData{}
	return &this
}

// GetUpdpNotifySubscriptionId returns the UpdpNotifySubscriptionId field value
func (o *UpdpSubscriptionData) GetUpdpNotifySubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdpNotifySubscriptionId
}

// GetUpdpNotifySubscriptionIdOk returns a tuple with the UpdpNotifySubscriptionId field value
// and a boolean to check if the value has been set.
func (o *UpdpSubscriptionData) GetUpdpNotifySubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdpNotifySubscriptionId, true
}

// SetUpdpNotifySubscriptionId sets field value
func (o *UpdpSubscriptionData) SetUpdpNotifySubscriptionId(v string) {
	o.UpdpNotifySubscriptionId = v
}

// GetUpdpNotifyCallbackUri returns the UpdpNotifyCallbackUri field value
func (o *UpdpSubscriptionData) GetUpdpNotifyCallbackUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdpNotifyCallbackUri
}

// GetUpdpNotifyCallbackUriOk returns a tuple with the UpdpNotifyCallbackUri field value
// and a boolean to check if the value has been set.
func (o *UpdpSubscriptionData) GetUpdpNotifyCallbackUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdpNotifyCallbackUri, true
}

// SetUpdpNotifyCallbackUri sets field value
func (o *UpdpSubscriptionData) SetUpdpNotifyCallbackUri(v string) {
	o.UpdpNotifyCallbackUri = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *UpdpSubscriptionData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdpSubscriptionData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *UpdpSubscriptionData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *UpdpSubscriptionData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o UpdpSubscriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdpSubscriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["updpNotifySubscriptionId"] = o.UpdpNotifySubscriptionId
	toSerialize["updpNotifyCallbackUri"] = o.UpdpNotifyCallbackUri
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableUpdpSubscriptionData struct {
	value *UpdpSubscriptionData
	isSet bool
}

func (v NullableUpdpSubscriptionData) Get() *UpdpSubscriptionData {
	return v.value
}

func (v *NullableUpdpSubscriptionData) Set(val *UpdpSubscriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdpSubscriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdpSubscriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdpSubscriptionData(val *UpdpSubscriptionData) *NullableUpdpSubscriptionData {
	return &NullableUpdpSubscriptionData{value: val, isSet: true}
}

func (v NullableUpdpSubscriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdpSubscriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


