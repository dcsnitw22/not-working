/*
Namf_Communication

AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_commn_client

import (
	"encoding/json"
)

// checks if the UeContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeContext{}

// UeContext struct for UeContext
type UeContext struct {
	Supi *string `json:"supi,omitempty"`
	SupiUnauthInd *bool `json:"supiUnauthInd,omitempty"`
	GpsiList []string `json:"gpsiList,omitempty"`
	Pei *string `json:"pei,omitempty"`
	UdmGroupId *string `json:"udmGroupId,omitempty"`
	AusfGroupId *string `json:"ausfGroupId,omitempty"`
	RoutingIndicator *string `json:"routingIndicator,omitempty"`
	GroupList []string `json:"groupList,omitempty"`
	DrxParameter *string `json:"drxParameter,omitempty"`
	SubRfsp *int32 `json:"subRfsp,omitempty"`
	UsedRfsp *int32 `json:"usedRfsp,omitempty"`
	SubUeAmbr *Ambr `json:"subUeAmbr,omitempty"`
	SmsSupport *SmsSupport `json:"smsSupport,omitempty"`
	SmsfId *string `json:"smsfId,omitempty"`
	SeafData *SeafData `json:"seafData,omitempty"`
	Var5gMmCapability *string `json:"5gMmCapability,omitempty"`
	PcfId *string `json:"pcfId,omitempty"`
	PcfAmPolicyUri *string `json:"pcfAmPolicyUri,omitempty"`
	AmPolicyReqTriggerList []PolicyReqTrigger `json:"amPolicyReqTriggerList,omitempty"`
	PcfUePolicyUri *string `json:"pcfUePolicyUri,omitempty"`
	UePolicyReqTriggerList []PolicyReqTrigger `json:"uePolicyReqTriggerList,omitempty"`
	HpcfId *string `json:"hpcfId,omitempty"`
	RestrictedRatList []RatType `json:"restrictedRatList,omitempty"`
	ForbiddenAreaList []*interface{} `json:"forbiddenAreaList,omitempty"`
	ServiceAreaRestriction *ServiceAreaRestriction `json:"serviceAreaRestriction,omitempty"`
	RestrictedCoreNwTypeList []CoreNetworkType `json:"restrictedCoreNwTypeList,omitempty"`
	EventSubscriptionList []AmfEventSubscription `json:"eventSubscriptionList,omitempty"`
	MmContextList []MmContext `json:"mmContextList,omitempty"`
	SessionContextList []PduSessionContext `json:"sessionContextList,omitempty"`
	TraceData NullableTraceData `json:"traceData,omitempty"`
	UsedServiceAreaRestriction *ServiceAreaRestriction `json:"usedServiceAreaRestriction,omitempty"`
	// A map(list of key-value pairs) where praId serves as key.
	PraInAmPolicy *map[string]PresenceInfo `json:"praInAmPolicy,omitempty"`
	// A map(list of key-value pairs) where praId serves as key.
	PraInUePolicy *map[string]PresenceInfo `json:"praInUePolicy,omitempty"`
	UpdpSubscriptionData *UpdpSubscriptionData `json:"updpSubscriptionData,omitempty"`
}

// NewUeContext instantiates a new UeContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeContext() *UeContext {
	this := UeContext{}
	return &this
}

// NewUeContextWithDefaults instantiates a new UeContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeContextWithDefaults() *UeContext {
	this := UeContext{}
	return &this
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *UeContext) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *UeContext) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *UeContext) SetSupi(v string) {
	o.Supi = &v
}

// GetSupiUnauthInd returns the SupiUnauthInd field value if set, zero value otherwise.
func (o *UeContext) GetSupiUnauthInd() bool {
	if o == nil || IsNil(o.SupiUnauthInd) {
		var ret bool
		return ret
	}
	return *o.SupiUnauthInd
}

// GetSupiUnauthIndOk returns a tuple with the SupiUnauthInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSupiUnauthIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SupiUnauthInd) {
		return nil, false
	}
	return o.SupiUnauthInd, true
}

// HasSupiUnauthInd returns a boolean if a field has been set.
func (o *UeContext) HasSupiUnauthInd() bool {
	if o != nil && !IsNil(o.SupiUnauthInd) {
		return true
	}

	return false
}

// SetSupiUnauthInd gets a reference to the given bool and assigns it to the SupiUnauthInd field.
func (o *UeContext) SetSupiUnauthInd(v bool) {
	o.SupiUnauthInd = &v
}

// GetGpsiList returns the GpsiList field value if set, zero value otherwise.
func (o *UeContext) GetGpsiList() []string {
	if o == nil || IsNil(o.GpsiList) {
		var ret []string
		return ret
	}
	return o.GpsiList
}

// GetGpsiListOk returns a tuple with the GpsiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetGpsiListOk() ([]string, bool) {
	if o == nil || IsNil(o.GpsiList) {
		return nil, false
	}
	return o.GpsiList, true
}

// HasGpsiList returns a boolean if a field has been set.
func (o *UeContext) HasGpsiList() bool {
	if o != nil && !IsNil(o.GpsiList) {
		return true
	}

	return false
}

// SetGpsiList gets a reference to the given []string and assigns it to the GpsiList field.
func (o *UeContext) SetGpsiList(v []string) {
	o.GpsiList = v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *UeContext) GetPei() string {
	if o == nil || IsNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPeiOk() (*string, bool) {
	if o == nil || IsNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *UeContext) HasPei() bool {
	if o != nil && !IsNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *UeContext) SetPei(v string) {
	o.Pei = &v
}

// GetUdmGroupId returns the UdmGroupId field value if set, zero value otherwise.
func (o *UeContext) GetUdmGroupId() string {
	if o == nil || IsNil(o.UdmGroupId) {
		var ret string
		return ret
	}
	return *o.UdmGroupId
}

// GetUdmGroupIdOk returns a tuple with the UdmGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetUdmGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.UdmGroupId) {
		return nil, false
	}
	return o.UdmGroupId, true
}

// HasUdmGroupId returns a boolean if a field has been set.
func (o *UeContext) HasUdmGroupId() bool {
	if o != nil && !IsNil(o.UdmGroupId) {
		return true
	}

	return false
}

// SetUdmGroupId gets a reference to the given string and assigns it to the UdmGroupId field.
func (o *UeContext) SetUdmGroupId(v string) {
	o.UdmGroupId = &v
}

// GetAusfGroupId returns the AusfGroupId field value if set, zero value otherwise.
func (o *UeContext) GetAusfGroupId() string {
	if o == nil || IsNil(o.AusfGroupId) {
		var ret string
		return ret
	}
	return *o.AusfGroupId
}

// GetAusfGroupIdOk returns a tuple with the AusfGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetAusfGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AusfGroupId) {
		return nil, false
	}
	return o.AusfGroupId, true
}

// HasAusfGroupId returns a boolean if a field has been set.
func (o *UeContext) HasAusfGroupId() bool {
	if o != nil && !IsNil(o.AusfGroupId) {
		return true
	}

	return false
}

// SetAusfGroupId gets a reference to the given string and assigns it to the AusfGroupId field.
func (o *UeContext) SetAusfGroupId(v string) {
	o.AusfGroupId = &v
}

// GetRoutingIndicator returns the RoutingIndicator field value if set, zero value otherwise.
func (o *UeContext) GetRoutingIndicator() string {
	if o == nil || IsNil(o.RoutingIndicator) {
		var ret string
		return ret
	}
	return *o.RoutingIndicator
}

// GetRoutingIndicatorOk returns a tuple with the RoutingIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetRoutingIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingIndicator) {
		return nil, false
	}
	return o.RoutingIndicator, true
}

// HasRoutingIndicator returns a boolean if a field has been set.
func (o *UeContext) HasRoutingIndicator() bool {
	if o != nil && !IsNil(o.RoutingIndicator) {
		return true
	}

	return false
}

// SetRoutingIndicator gets a reference to the given string and assigns it to the RoutingIndicator field.
func (o *UeContext) SetRoutingIndicator(v string) {
	o.RoutingIndicator = &v
}

// GetGroupList returns the GroupList field value if set, zero value otherwise.
func (o *UeContext) GetGroupList() []string {
	if o == nil || IsNil(o.GroupList) {
		var ret []string
		return ret
	}
	return o.GroupList
}

// GetGroupListOk returns a tuple with the GroupList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetGroupListOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupList) {
		return nil, false
	}
	return o.GroupList, true
}

// HasGroupList returns a boolean if a field has been set.
func (o *UeContext) HasGroupList() bool {
	if o != nil && !IsNil(o.GroupList) {
		return true
	}

	return false
}

// SetGroupList gets a reference to the given []string and assigns it to the GroupList field.
func (o *UeContext) SetGroupList(v []string) {
	o.GroupList = v
}

// GetDrxParameter returns the DrxParameter field value if set, zero value otherwise.
func (o *UeContext) GetDrxParameter() string {
	if o == nil || IsNil(o.DrxParameter) {
		var ret string
		return ret
	}
	return *o.DrxParameter
}

// GetDrxParameterOk returns a tuple with the DrxParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetDrxParameterOk() (*string, bool) {
	if o == nil || IsNil(o.DrxParameter) {
		return nil, false
	}
	return o.DrxParameter, true
}

// HasDrxParameter returns a boolean if a field has been set.
func (o *UeContext) HasDrxParameter() bool {
	if o != nil && !IsNil(o.DrxParameter) {
		return true
	}

	return false
}

// SetDrxParameter gets a reference to the given string and assigns it to the DrxParameter field.
func (o *UeContext) SetDrxParameter(v string) {
	o.DrxParameter = &v
}

// GetSubRfsp returns the SubRfsp field value if set, zero value otherwise.
func (o *UeContext) GetSubRfsp() int32 {
	if o == nil || IsNil(o.SubRfsp) {
		var ret int32
		return ret
	}
	return *o.SubRfsp
}

// GetSubRfspOk returns a tuple with the SubRfsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSubRfspOk() (*int32, bool) {
	if o == nil || IsNil(o.SubRfsp) {
		return nil, false
	}
	return o.SubRfsp, true
}

// HasSubRfsp returns a boolean if a field has been set.
func (o *UeContext) HasSubRfsp() bool {
	if o != nil && !IsNil(o.SubRfsp) {
		return true
	}

	return false
}

// SetSubRfsp gets a reference to the given int32 and assigns it to the SubRfsp field.
func (o *UeContext) SetSubRfsp(v int32) {
	o.SubRfsp = &v
}

// GetUsedRfsp returns the UsedRfsp field value if set, zero value otherwise.
func (o *UeContext) GetUsedRfsp() int32 {
	if o == nil || IsNil(o.UsedRfsp) {
		var ret int32
		return ret
	}
	return *o.UsedRfsp
}

// GetUsedRfspOk returns a tuple with the UsedRfsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetUsedRfspOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedRfsp) {
		return nil, false
	}
	return o.UsedRfsp, true
}

// HasUsedRfsp returns a boolean if a field has been set.
func (o *UeContext) HasUsedRfsp() bool {
	if o != nil && !IsNil(o.UsedRfsp) {
		return true
	}

	return false
}

// SetUsedRfsp gets a reference to the given int32 and assigns it to the UsedRfsp field.
func (o *UeContext) SetUsedRfsp(v int32) {
	o.UsedRfsp = &v
}

// GetSubUeAmbr returns the SubUeAmbr field value if set, zero value otherwise.
func (o *UeContext) GetSubUeAmbr() Ambr {
	if o == nil || IsNil(o.SubUeAmbr) {
		var ret Ambr
		return ret
	}
	return *o.SubUeAmbr
}

// GetSubUeAmbrOk returns a tuple with the SubUeAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSubUeAmbrOk() (*Ambr, bool) {
	if o == nil || IsNil(o.SubUeAmbr) {
		return nil, false
	}
	return o.SubUeAmbr, true
}

// HasSubUeAmbr returns a boolean if a field has been set.
func (o *UeContext) HasSubUeAmbr() bool {
	if o != nil && !IsNil(o.SubUeAmbr) {
		return true
	}

	return false
}

// SetSubUeAmbr gets a reference to the given Ambr and assigns it to the SubUeAmbr field.
func (o *UeContext) SetSubUeAmbr(v Ambr) {
	o.SubUeAmbr = &v
}

// GetSmsSupport returns the SmsSupport field value if set, zero value otherwise.
func (o *UeContext) GetSmsSupport() SmsSupport {
	if o == nil || IsNil(o.SmsSupport) {
		var ret SmsSupport
		return ret
	}
	return *o.SmsSupport
}

// GetSmsSupportOk returns a tuple with the SmsSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSmsSupportOk() (*SmsSupport, bool) {
	if o == nil || IsNil(o.SmsSupport) {
		return nil, false
	}
	return o.SmsSupport, true
}

// HasSmsSupport returns a boolean if a field has been set.
func (o *UeContext) HasSmsSupport() bool {
	if o != nil && !IsNil(o.SmsSupport) {
		return true
	}

	return false
}

// SetSmsSupport gets a reference to the given SmsSupport and assigns it to the SmsSupport field.
func (o *UeContext) SetSmsSupport(v SmsSupport) {
	o.SmsSupport = &v
}

// GetSmsfId returns the SmsfId field value if set, zero value otherwise.
func (o *UeContext) GetSmsfId() string {
	if o == nil || IsNil(o.SmsfId) {
		var ret string
		return ret
	}
	return *o.SmsfId
}

// GetSmsfIdOk returns a tuple with the SmsfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSmsfIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmsfId) {
		return nil, false
	}
	return o.SmsfId, true
}

// HasSmsfId returns a boolean if a field has been set.
func (o *UeContext) HasSmsfId() bool {
	if o != nil && !IsNil(o.SmsfId) {
		return true
	}

	return false
}

// SetSmsfId gets a reference to the given string and assigns it to the SmsfId field.
func (o *UeContext) SetSmsfId(v string) {
	o.SmsfId = &v
}

// GetSeafData returns the SeafData field value if set, zero value otherwise.
func (o *UeContext) GetSeafData() SeafData {
	if o == nil || IsNil(o.SeafData) {
		var ret SeafData
		return ret
	}
	return *o.SeafData
}

// GetSeafDataOk returns a tuple with the SeafData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSeafDataOk() (*SeafData, bool) {
	if o == nil || IsNil(o.SeafData) {
		return nil, false
	}
	return o.SeafData, true
}

// HasSeafData returns a boolean if a field has been set.
func (o *UeContext) HasSeafData() bool {
	if o != nil && !IsNil(o.SeafData) {
		return true
	}

	return false
}

// SetSeafData gets a reference to the given SeafData and assigns it to the SeafData field.
func (o *UeContext) SetSeafData(v SeafData) {
	o.SeafData = &v
}

// GetVar5gMmCapability returns the Var5gMmCapability field value if set, zero value otherwise.
func (o *UeContext) GetVar5gMmCapability() string {
	if o == nil || IsNil(o.Var5gMmCapability) {
		var ret string
		return ret
	}
	return *o.Var5gMmCapability
}

// GetVar5gMmCapabilityOk returns a tuple with the Var5gMmCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetVar5gMmCapabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Var5gMmCapability) {
		return nil, false
	}
	return o.Var5gMmCapability, true
}

// HasVar5gMmCapability returns a boolean if a field has been set.
func (o *UeContext) HasVar5gMmCapability() bool {
	if o != nil && !IsNil(o.Var5gMmCapability) {
		return true
	}

	return false
}

// SetVar5gMmCapability gets a reference to the given string and assigns it to the Var5gMmCapability field.
func (o *UeContext) SetVar5gMmCapability(v string) {
	o.Var5gMmCapability = &v
}

// GetPcfId returns the PcfId field value if set, zero value otherwise.
func (o *UeContext) GetPcfId() string {
	if o == nil || IsNil(o.PcfId) {
		var ret string
		return ret
	}
	return *o.PcfId
}

// GetPcfIdOk returns a tuple with the PcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPcfIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfId) {
		return nil, false
	}
	return o.PcfId, true
}

// HasPcfId returns a boolean if a field has been set.
func (o *UeContext) HasPcfId() bool {
	if o != nil && !IsNil(o.PcfId) {
		return true
	}

	return false
}

// SetPcfId gets a reference to the given string and assigns it to the PcfId field.
func (o *UeContext) SetPcfId(v string) {
	o.PcfId = &v
}

// GetPcfAmPolicyUri returns the PcfAmPolicyUri field value if set, zero value otherwise.
func (o *UeContext) GetPcfAmPolicyUri() string {
	if o == nil || IsNil(o.PcfAmPolicyUri) {
		var ret string
		return ret
	}
	return *o.PcfAmPolicyUri
}

// GetPcfAmPolicyUriOk returns a tuple with the PcfAmPolicyUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPcfAmPolicyUriOk() (*string, bool) {
	if o == nil || IsNil(o.PcfAmPolicyUri) {
		return nil, false
	}
	return o.PcfAmPolicyUri, true
}

// HasPcfAmPolicyUri returns a boolean if a field has been set.
func (o *UeContext) HasPcfAmPolicyUri() bool {
	if o != nil && !IsNil(o.PcfAmPolicyUri) {
		return true
	}

	return false
}

// SetPcfAmPolicyUri gets a reference to the given string and assigns it to the PcfAmPolicyUri field.
func (o *UeContext) SetPcfAmPolicyUri(v string) {
	o.PcfAmPolicyUri = &v
}

// GetAmPolicyReqTriggerList returns the AmPolicyReqTriggerList field value if set, zero value otherwise.
func (o *UeContext) GetAmPolicyReqTriggerList() []PolicyReqTrigger {
	if o == nil || IsNil(o.AmPolicyReqTriggerList) {
		var ret []PolicyReqTrigger
		return ret
	}
	return o.AmPolicyReqTriggerList
}

// GetAmPolicyReqTriggerListOk returns a tuple with the AmPolicyReqTriggerList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetAmPolicyReqTriggerListOk() ([]PolicyReqTrigger, bool) {
	if o == nil || IsNil(o.AmPolicyReqTriggerList) {
		return nil, false
	}
	return o.AmPolicyReqTriggerList, true
}

// HasAmPolicyReqTriggerList returns a boolean if a field has been set.
func (o *UeContext) HasAmPolicyReqTriggerList() bool {
	if o != nil && !IsNil(o.AmPolicyReqTriggerList) {
		return true
	}

	return false
}

// SetAmPolicyReqTriggerList gets a reference to the given []PolicyReqTrigger and assigns it to the AmPolicyReqTriggerList field.
func (o *UeContext) SetAmPolicyReqTriggerList(v []PolicyReqTrigger) {
	o.AmPolicyReqTriggerList = v
}

// GetPcfUePolicyUri returns the PcfUePolicyUri field value if set, zero value otherwise.
func (o *UeContext) GetPcfUePolicyUri() string {
	if o == nil || IsNil(o.PcfUePolicyUri) {
		var ret string
		return ret
	}
	return *o.PcfUePolicyUri
}

// GetPcfUePolicyUriOk returns a tuple with the PcfUePolicyUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPcfUePolicyUriOk() (*string, bool) {
	if o == nil || IsNil(o.PcfUePolicyUri) {
		return nil, false
	}
	return o.PcfUePolicyUri, true
}

// HasPcfUePolicyUri returns a boolean if a field has been set.
func (o *UeContext) HasPcfUePolicyUri() bool {
	if o != nil && !IsNil(o.PcfUePolicyUri) {
		return true
	}

	return false
}

// SetPcfUePolicyUri gets a reference to the given string and assigns it to the PcfUePolicyUri field.
func (o *UeContext) SetPcfUePolicyUri(v string) {
	o.PcfUePolicyUri = &v
}

// GetUePolicyReqTriggerList returns the UePolicyReqTriggerList field value if set, zero value otherwise.
func (o *UeContext) GetUePolicyReqTriggerList() []PolicyReqTrigger {
	if o == nil || IsNil(o.UePolicyReqTriggerList) {
		var ret []PolicyReqTrigger
		return ret
	}
	return o.UePolicyReqTriggerList
}

// GetUePolicyReqTriggerListOk returns a tuple with the UePolicyReqTriggerList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetUePolicyReqTriggerListOk() ([]PolicyReqTrigger, bool) {
	if o == nil || IsNil(o.UePolicyReqTriggerList) {
		return nil, false
	}
	return o.UePolicyReqTriggerList, true
}

// HasUePolicyReqTriggerList returns a boolean if a field has been set.
func (o *UeContext) HasUePolicyReqTriggerList() bool {
	if o != nil && !IsNil(o.UePolicyReqTriggerList) {
		return true
	}

	return false
}

// SetUePolicyReqTriggerList gets a reference to the given []PolicyReqTrigger and assigns it to the UePolicyReqTriggerList field.
func (o *UeContext) SetUePolicyReqTriggerList(v []PolicyReqTrigger) {
	o.UePolicyReqTriggerList = v
}

// GetHpcfId returns the HpcfId field value if set, zero value otherwise.
func (o *UeContext) GetHpcfId() string {
	if o == nil || IsNil(o.HpcfId) {
		var ret string
		return ret
	}
	return *o.HpcfId
}

// GetHpcfIdOk returns a tuple with the HpcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetHpcfIdOk() (*string, bool) {
	if o == nil || IsNil(o.HpcfId) {
		return nil, false
	}
	return o.HpcfId, true
}

// HasHpcfId returns a boolean if a field has been set.
func (o *UeContext) HasHpcfId() bool {
	if o != nil && !IsNil(o.HpcfId) {
		return true
	}

	return false
}

// SetHpcfId gets a reference to the given string and assigns it to the HpcfId field.
func (o *UeContext) SetHpcfId(v string) {
	o.HpcfId = &v
}

// GetRestrictedRatList returns the RestrictedRatList field value if set, zero value otherwise.
func (o *UeContext) GetRestrictedRatList() []RatType {
	if o == nil || IsNil(o.RestrictedRatList) {
		var ret []RatType
		return ret
	}
	return o.RestrictedRatList
}

// GetRestrictedRatListOk returns a tuple with the RestrictedRatList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetRestrictedRatListOk() ([]RatType, bool) {
	if o == nil || IsNil(o.RestrictedRatList) {
		return nil, false
	}
	return o.RestrictedRatList, true
}

// HasRestrictedRatList returns a boolean if a field has been set.
func (o *UeContext) HasRestrictedRatList() bool {
	if o != nil && !IsNil(o.RestrictedRatList) {
		return true
	}

	return false
}

// SetRestrictedRatList gets a reference to the given []RatType and assigns it to the RestrictedRatList field.
func (o *UeContext) SetRestrictedRatList(v []RatType) {
	o.RestrictedRatList = v
}

// GetForbiddenAreaList returns the ForbiddenAreaList field value if set, zero value otherwise.
func (o *UeContext) GetForbiddenAreaList() []*interface{} {
	if o == nil || IsNil(o.ForbiddenAreaList) {
		var ret []*interface{}
		return ret
	}
	return o.ForbiddenAreaList
}

// GetForbiddenAreaListOk returns a tuple with the ForbiddenAreaList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetForbiddenAreaListOk() ([]*interface{}, bool) {
	if o == nil || IsNil(o.ForbiddenAreaList) {
		return nil, false
	}
	return o.ForbiddenAreaList, true
}

// HasForbiddenAreaList returns a boolean if a field has been set.
func (o *UeContext) HasForbiddenAreaList() bool {
	if o != nil && !IsNil(o.ForbiddenAreaList) {
		return true
	}

	return false
}

// SetForbiddenAreaList gets a reference to the given []*interface{} and assigns it to the ForbiddenAreaList field.
func (o *UeContext) SetForbiddenAreaList(v []*interface{}) {
	o.ForbiddenAreaList = v
}

// GetServiceAreaRestriction returns the ServiceAreaRestriction field value if set, zero value otherwise.
func (o *UeContext) GetServiceAreaRestriction() ServiceAreaRestriction {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		var ret ServiceAreaRestriction
		return ret
	}
	return *o.ServiceAreaRestriction
}

// GetServiceAreaRestrictionOk returns a tuple with the ServiceAreaRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetServiceAreaRestrictionOk() (*ServiceAreaRestriction, bool) {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		return nil, false
	}
	return o.ServiceAreaRestriction, true
}

// HasServiceAreaRestriction returns a boolean if a field has been set.
func (o *UeContext) HasServiceAreaRestriction() bool {
	if o != nil && !IsNil(o.ServiceAreaRestriction) {
		return true
	}

	return false
}

// SetServiceAreaRestriction gets a reference to the given ServiceAreaRestriction and assigns it to the ServiceAreaRestriction field.
func (o *UeContext) SetServiceAreaRestriction(v ServiceAreaRestriction) {
	o.ServiceAreaRestriction = &v
}

// GetRestrictedCoreNwTypeList returns the RestrictedCoreNwTypeList field value if set, zero value otherwise.
func (o *UeContext) GetRestrictedCoreNwTypeList() []CoreNetworkType {
	if o == nil || IsNil(o.RestrictedCoreNwTypeList) {
		var ret []CoreNetworkType
		return ret
	}
	return o.RestrictedCoreNwTypeList
}

// GetRestrictedCoreNwTypeListOk returns a tuple with the RestrictedCoreNwTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetRestrictedCoreNwTypeListOk() ([]CoreNetworkType, bool) {
	if o == nil || IsNil(o.RestrictedCoreNwTypeList) {
		return nil, false
	}
	return o.RestrictedCoreNwTypeList, true
}

// HasRestrictedCoreNwTypeList returns a boolean if a field has been set.
func (o *UeContext) HasRestrictedCoreNwTypeList() bool {
	if o != nil && !IsNil(o.RestrictedCoreNwTypeList) {
		return true
	}

	return false
}

// SetRestrictedCoreNwTypeList gets a reference to the given []CoreNetworkType and assigns it to the RestrictedCoreNwTypeList field.
func (o *UeContext) SetRestrictedCoreNwTypeList(v []CoreNetworkType) {
	o.RestrictedCoreNwTypeList = v
}

// GetEventSubscriptionList returns the EventSubscriptionList field value if set, zero value otherwise.
func (o *UeContext) GetEventSubscriptionList() []AmfEventSubscription {
	if o == nil || IsNil(o.EventSubscriptionList) {
		var ret []AmfEventSubscription
		return ret
	}
	return o.EventSubscriptionList
}

// GetEventSubscriptionListOk returns a tuple with the EventSubscriptionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetEventSubscriptionListOk() ([]AmfEventSubscription, bool) {
	if o == nil || IsNil(o.EventSubscriptionList) {
		return nil, false
	}
	return o.EventSubscriptionList, true
}

// HasEventSubscriptionList returns a boolean if a field has been set.
func (o *UeContext) HasEventSubscriptionList() bool {
	if o != nil && !IsNil(o.EventSubscriptionList) {
		return true
	}

	return false
}

// SetEventSubscriptionList gets a reference to the given []AmfEventSubscription and assigns it to the EventSubscriptionList field.
func (o *UeContext) SetEventSubscriptionList(v []AmfEventSubscription) {
	o.EventSubscriptionList = v
}

// GetMmContextList returns the MmContextList field value if set, zero value otherwise.
func (o *UeContext) GetMmContextList() []MmContext {
	if o == nil || IsNil(o.MmContextList) {
		var ret []MmContext
		return ret
	}
	return o.MmContextList
}

// GetMmContextListOk returns a tuple with the MmContextList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetMmContextListOk() ([]MmContext, bool) {
	if o == nil || IsNil(o.MmContextList) {
		return nil, false
	}
	return o.MmContextList, true
}

// HasMmContextList returns a boolean if a field has been set.
func (o *UeContext) HasMmContextList() bool {
	if o != nil && !IsNil(o.MmContextList) {
		return true
	}

	return false
}

// SetMmContextList gets a reference to the given []MmContext and assigns it to the MmContextList field.
func (o *UeContext) SetMmContextList(v []MmContext) {
	o.MmContextList = v
}

// GetSessionContextList returns the SessionContextList field value if set, zero value otherwise.
func (o *UeContext) GetSessionContextList() []PduSessionContext {
	if o == nil || IsNil(o.SessionContextList) {
		var ret []PduSessionContext
		return ret
	}
	return o.SessionContextList
}

// GetSessionContextListOk returns a tuple with the SessionContextList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetSessionContextListOk() ([]PduSessionContext, bool) {
	if o == nil || IsNil(o.SessionContextList) {
		return nil, false
	}
	return o.SessionContextList, true
}

// HasSessionContextList returns a boolean if a field has been set.
func (o *UeContext) HasSessionContextList() bool {
	if o != nil && !IsNil(o.SessionContextList) {
		return true
	}

	return false
}

// SetSessionContextList gets a reference to the given []PduSessionContext and assigns it to the SessionContextList field.
func (o *UeContext) SetSessionContextList(v []PduSessionContext) {
	o.SessionContextList = v
}

// GetTraceData returns the TraceData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UeContext) GetTraceData() TraceData {
	if o == nil || IsNil(o.TraceData.Get()) {
		var ret TraceData
		return ret
	}
	return *o.TraceData.Get()
}

// GetTraceDataOk returns a tuple with the TraceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UeContext) GetTraceDataOk() (*TraceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceData.Get(), o.TraceData.IsSet()
}

// HasTraceData returns a boolean if a field has been set.
func (o *UeContext) HasTraceData() bool {
	if o != nil && o.TraceData.IsSet() {
		return true
	}

	return false
}

// SetTraceData gets a reference to the given NullableTraceData and assigns it to the TraceData field.
func (o *UeContext) SetTraceData(v TraceData) {
	o.TraceData.Set(&v)
}
// SetTraceDataNil sets the value for TraceData to be an explicit nil
func (o *UeContext) SetTraceDataNil() {
	o.TraceData.Set(nil)
}

// UnsetTraceData ensures that no value is present for TraceData, not even an explicit nil
func (o *UeContext) UnsetTraceData() {
	o.TraceData.Unset()
}

// GetUsedServiceAreaRestriction returns the UsedServiceAreaRestriction field value if set, zero value otherwise.
func (o *UeContext) GetUsedServiceAreaRestriction() ServiceAreaRestriction {
	if o == nil || IsNil(o.UsedServiceAreaRestriction) {
		var ret ServiceAreaRestriction
		return ret
	}
	return *o.UsedServiceAreaRestriction
}

// GetUsedServiceAreaRestrictionOk returns a tuple with the UsedServiceAreaRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetUsedServiceAreaRestrictionOk() (*ServiceAreaRestriction, bool) {
	if o == nil || IsNil(o.UsedServiceAreaRestriction) {
		return nil, false
	}
	return o.UsedServiceAreaRestriction, true
}

// HasUsedServiceAreaRestriction returns a boolean if a field has been set.
func (o *UeContext) HasUsedServiceAreaRestriction() bool {
	if o != nil && !IsNil(o.UsedServiceAreaRestriction) {
		return true
	}

	return false
}

// SetUsedServiceAreaRestriction gets a reference to the given ServiceAreaRestriction and assigns it to the UsedServiceAreaRestriction field.
func (o *UeContext) SetUsedServiceAreaRestriction(v ServiceAreaRestriction) {
	o.UsedServiceAreaRestriction = &v
}

// GetPraInAmPolicy returns the PraInAmPolicy field value if set, zero value otherwise.
func (o *UeContext) GetPraInAmPolicy() map[string]PresenceInfo {
	if o == nil || IsNil(o.PraInAmPolicy) {
		var ret map[string]PresenceInfo
		return ret
	}
	return *o.PraInAmPolicy
}

// GetPraInAmPolicyOk returns a tuple with the PraInAmPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPraInAmPolicyOk() (*map[string]PresenceInfo, bool) {
	if o == nil || IsNil(o.PraInAmPolicy) {
		return nil, false
	}
	return o.PraInAmPolicy, true
}

// HasPraInAmPolicy returns a boolean if a field has been set.
func (o *UeContext) HasPraInAmPolicy() bool {
	if o != nil && !IsNil(o.PraInAmPolicy) {
		return true
	}

	return false
}

// SetPraInAmPolicy gets a reference to the given map[string]PresenceInfo and assigns it to the PraInAmPolicy field.
func (o *UeContext) SetPraInAmPolicy(v map[string]PresenceInfo) {
	o.PraInAmPolicy = &v
}

// GetPraInUePolicy returns the PraInUePolicy field value if set, zero value otherwise.
func (o *UeContext) GetPraInUePolicy() map[string]PresenceInfo {
	if o == nil || IsNil(o.PraInUePolicy) {
		var ret map[string]PresenceInfo
		return ret
	}
	return *o.PraInUePolicy
}

// GetPraInUePolicyOk returns a tuple with the PraInUePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetPraInUePolicyOk() (*map[string]PresenceInfo, bool) {
	if o == nil || IsNil(o.PraInUePolicy) {
		return nil, false
	}
	return o.PraInUePolicy, true
}

// HasPraInUePolicy returns a boolean if a field has been set.
func (o *UeContext) HasPraInUePolicy() bool {
	if o != nil && !IsNil(o.PraInUePolicy) {
		return true
	}

	return false
}

// SetPraInUePolicy gets a reference to the given map[string]PresenceInfo and assigns it to the PraInUePolicy field.
func (o *UeContext) SetPraInUePolicy(v map[string]PresenceInfo) {
	o.PraInUePolicy = &v
}

// GetUpdpSubscriptionData returns the UpdpSubscriptionData field value if set, zero value otherwise.
func (o *UeContext) GetUpdpSubscriptionData() UpdpSubscriptionData {
	if o == nil || IsNil(o.UpdpSubscriptionData) {
		var ret UpdpSubscriptionData
		return ret
	}
	return *o.UpdpSubscriptionData
}

// GetUpdpSubscriptionDataOk returns a tuple with the UpdpSubscriptionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContext) GetUpdpSubscriptionDataOk() (*UpdpSubscriptionData, bool) {
	if o == nil || IsNil(o.UpdpSubscriptionData) {
		return nil, false
	}
	return o.UpdpSubscriptionData, true
}

// HasUpdpSubscriptionData returns a boolean if a field has been set.
func (o *UeContext) HasUpdpSubscriptionData() bool {
	if o != nil && !IsNil(o.UpdpSubscriptionData) {
		return true
	}

	return false
}

// SetUpdpSubscriptionData gets a reference to the given UpdpSubscriptionData and assigns it to the UpdpSubscriptionData field.
func (o *UeContext) SetUpdpSubscriptionData(v UpdpSubscriptionData) {
	o.UpdpSubscriptionData = &v
}

func (o UeContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.SupiUnauthInd) {
		toSerialize["supiUnauthInd"] = o.SupiUnauthInd
	}
	if !IsNil(o.GpsiList) {
		toSerialize["gpsiList"] = o.GpsiList
	}
	if !IsNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !IsNil(o.UdmGroupId) {
		toSerialize["udmGroupId"] = o.UdmGroupId
	}
	if !IsNil(o.AusfGroupId) {
		toSerialize["ausfGroupId"] = o.AusfGroupId
	}
	if !IsNil(o.RoutingIndicator) {
		toSerialize["routingIndicator"] = o.RoutingIndicator
	}
	if !IsNil(o.GroupList) {
		toSerialize["groupList"] = o.GroupList
	}
	if !IsNil(o.DrxParameter) {
		toSerialize["drxParameter"] = o.DrxParameter
	}
	if !IsNil(o.SubRfsp) {
		toSerialize["subRfsp"] = o.SubRfsp
	}
	if !IsNil(o.UsedRfsp) {
		toSerialize["usedRfsp"] = o.UsedRfsp
	}
	if !IsNil(o.SubUeAmbr) {
		toSerialize["subUeAmbr"] = o.SubUeAmbr
	}
	if !IsNil(o.SmsSupport) {
		toSerialize["smsSupport"] = o.SmsSupport
	}
	if !IsNil(o.SmsfId) {
		toSerialize["smsfId"] = o.SmsfId
	}
	if !IsNil(o.SeafData) {
		toSerialize["seafData"] = o.SeafData
	}
	if !IsNil(o.Var5gMmCapability) {
		toSerialize["5gMmCapability"] = o.Var5gMmCapability
	}
	if !IsNil(o.PcfId) {
		toSerialize["pcfId"] = o.PcfId
	}
	if !IsNil(o.PcfAmPolicyUri) {
		toSerialize["pcfAmPolicyUri"] = o.PcfAmPolicyUri
	}
	if !IsNil(o.AmPolicyReqTriggerList) {
		toSerialize["amPolicyReqTriggerList"] = o.AmPolicyReqTriggerList
	}
	if !IsNil(o.PcfUePolicyUri) {
		toSerialize["pcfUePolicyUri"] = o.PcfUePolicyUri
	}
	if !IsNil(o.UePolicyReqTriggerList) {
		toSerialize["uePolicyReqTriggerList"] = o.UePolicyReqTriggerList
	}
	if !IsNil(o.HpcfId) {
		toSerialize["hpcfId"] = o.HpcfId
	}
	if !IsNil(o.RestrictedRatList) {
		toSerialize["restrictedRatList"] = o.RestrictedRatList
	}
	if !IsNil(o.ForbiddenAreaList) {
		toSerialize["forbiddenAreaList"] = o.ForbiddenAreaList
	}
	if !IsNil(o.ServiceAreaRestriction) {
		toSerialize["serviceAreaRestriction"] = o.ServiceAreaRestriction
	}
	if !IsNil(o.RestrictedCoreNwTypeList) {
		toSerialize["restrictedCoreNwTypeList"] = o.RestrictedCoreNwTypeList
	}
	if !IsNil(o.EventSubscriptionList) {
		toSerialize["eventSubscriptionList"] = o.EventSubscriptionList
	}
	if !IsNil(o.MmContextList) {
		toSerialize["mmContextList"] = o.MmContextList
	}
	if !IsNil(o.SessionContextList) {
		toSerialize["sessionContextList"] = o.SessionContextList
	}
	if o.TraceData.IsSet() {
		toSerialize["traceData"] = o.TraceData.Get()
	}
	if !IsNil(o.UsedServiceAreaRestriction) {
		toSerialize["usedServiceAreaRestriction"] = o.UsedServiceAreaRestriction
	}
	if !IsNil(o.PraInAmPolicy) {
		toSerialize["praInAmPolicy"] = o.PraInAmPolicy
	}
	if !IsNil(o.PraInUePolicy) {
		toSerialize["praInUePolicy"] = o.PraInUePolicy
	}
	if !IsNil(o.UpdpSubscriptionData) {
		toSerialize["updpSubscriptionData"] = o.UpdpSubscriptionData
	}
	return toSerialize, nil
}

type NullableUeContext struct {
	value *UeContext
	isSet bool
}

func (v NullableUeContext) Get() *UeContext {
	return v.value
}

func (v *NullableUeContext) Set(val *UeContext) {
	v.value = val
	v.isSet = true
}

func (v NullableUeContext) IsSet() bool {
	return v.isSet
}

func (v *NullableUeContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeContext(val *UeContext) *NullableUeContext {
	return &NullableUeContext{value: val, isSet: true}
}

func (v NullableUeContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


