/*
Nsmf_PDUSession

SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// checks if the HsmfUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HsmfUpdateData{}

// HsmfUpdateData struct for HsmfUpdateData
type HsmfUpdateData struct {
	RequestIndication RequestIndication `json:"requestIndication"`
	Pei *string `json:"pei,omitempty"`
	VcnTunnelInfo *TunnelInfo `json:"vcnTunnelInfo,omitempty"`
	ServingNetwork *PlmnId `json:"servingNetwork,omitempty"`
	AnType *AccessType `json:"anType,omitempty"`
	RatType *RatType `json:"ratType,omitempty"`
	UeLocation *UserLocation `json:"ueLocation,omitempty"`
	UeTimeZone *string `json:"ueTimeZone,omitempty"`
	AddUeLocation *UserLocation `json:"addUeLocation,omitempty"`
	PauseCharging *bool `json:"pauseCharging,omitempty"`
	Pti *int32 `json:"pti,omitempty"`
	N1SmInfoFromUe *RefToBinaryData `json:"n1SmInfoFromUe,omitempty"`
	UnknownN1SmInfo *RefToBinaryData `json:"unknownN1SmInfo,omitempty"`
	QosFlowsRelNotifyList []QosFlowItem `json:"qosFlowsRelNotifyList,omitempty"`
	QosFlowsNotifyList []QosFlowNotifyItem `json:"qosFlowsNotifyList,omitempty"`
	NotifyList []PduSessionNotifyItem `json:"NotifyList,omitempty"`
	EpsBearerId []int32 `json:"epsBearerId,omitempty"`
	HoPreparationIndication *bool `json:"hoPreparationIndication,omitempty"`
	RevokeEbiList []int32 `json:"revokeEbiList,omitempty"`
	Cause *Cause `json:"cause,omitempty"`
	NgApCause *NgApCause `json:"ngApCause,omitempty"`
	Var5gMmCauseValue *int32 `json:"5gMmCauseValue,omitempty"`
	AlwaysOnRequested *bool `json:"alwaysOnRequested,omitempty"`
	EpsInterworkingInd *EpsInterworkingIndication `json:"epsInterworkingInd,omitempty"`
	SecondaryRatUsageReport []SecondaryRatUsageReport `json:"secondaryRatUsageReport,omitempty"`
	SecondaryRatUsageInfo []SecondaryRatUsageInfo `json:"secondaryRatUsageInfo,omitempty"`
	AnTypeCanBeChanged *bool `json:"anTypeCanBeChanged,omitempty"`
}

// NewHsmfUpdateData instantiates a new HsmfUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHsmfUpdateData(requestIndication RequestIndication) *HsmfUpdateData {
	this := HsmfUpdateData{}
	this.RequestIndication = requestIndication
	var alwaysOnRequested bool = false
	this.AlwaysOnRequested = &alwaysOnRequested
	var anTypeCanBeChanged bool = false
	this.AnTypeCanBeChanged = &anTypeCanBeChanged
	return &this
}

// NewHsmfUpdateDataWithDefaults instantiates a new HsmfUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHsmfUpdateDataWithDefaults() *HsmfUpdateData {
	this := HsmfUpdateData{}
	var alwaysOnRequested bool = false
	this.AlwaysOnRequested = &alwaysOnRequested
	var anTypeCanBeChanged bool = false
	this.AnTypeCanBeChanged = &anTypeCanBeChanged
	return &this
}

// GetRequestIndication returns the RequestIndication field value
func (o *HsmfUpdateData) GetRequestIndication() RequestIndication {
	if o == nil {
		var ret RequestIndication
		return ret
	}

	return o.RequestIndication
}

// GetRequestIndicationOk returns a tuple with the RequestIndication field value
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRequestIndicationOk() (*RequestIndication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestIndication, true
}

// SetRequestIndication sets field value
func (o *HsmfUpdateData) SetRequestIndication(v RequestIndication) {
	o.RequestIndication = v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPei() string {
	if o == nil || IsNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPeiOk() (*string, bool) {
	if o == nil || IsNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPei() bool {
	if o != nil && !IsNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *HsmfUpdateData) SetPei(v string) {
	o.Pei = &v
}

// GetVcnTunnelInfo returns the VcnTunnelInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVcnTunnelInfo() TunnelInfo {
	if o == nil || IsNil(o.VcnTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.VcnTunnelInfo
}

// GetVcnTunnelInfoOk returns a tuple with the VcnTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVcnTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || IsNil(o.VcnTunnelInfo) {
		return nil, false
	}
	return o.VcnTunnelInfo, true
}

// HasVcnTunnelInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVcnTunnelInfo() bool {
	if o != nil && !IsNil(o.VcnTunnelInfo) {
		return true
	}

	return false
}

// SetVcnTunnelInfo gets a reference to the given TunnelInfo and assigns it to the VcnTunnelInfo field.
func (o *HsmfUpdateData) SetVcnTunnelInfo(v TunnelInfo) {
	o.VcnTunnelInfo = &v
}

// GetServingNetwork returns the ServingNetwork field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetServingNetwork() PlmnId {
	if o == nil || IsNil(o.ServingNetwork) {
		var ret PlmnId
		return ret
	}
	return *o.ServingNetwork
}

// GetServingNetworkOk returns a tuple with the ServingNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetServingNetworkOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.ServingNetwork) {
		return nil, false
	}
	return o.ServingNetwork, true
}

// HasServingNetwork returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasServingNetwork() bool {
	if o != nil && !IsNil(o.ServingNetwork) {
		return true
	}

	return false
}

// SetServingNetwork gets a reference to the given PlmnId and assigns it to the ServingNetwork field.
func (o *HsmfUpdateData) SetServingNetwork(v PlmnId) {
	o.ServingNetwork = &v
}

// GetAnType returns the AnType field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAnType() AccessType {
	if o == nil || IsNil(o.AnType) {
		var ret AccessType
		return ret
	}
	return *o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAnTypeOk() (*AccessType, bool) {
	if o == nil || IsNil(o.AnType) {
		return nil, false
	}
	return o.AnType, true
}

// HasAnType returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAnType() bool {
	if o != nil && !IsNil(o.AnType) {
		return true
	}

	return false
}

// SetAnType gets a reference to the given AccessType and assigns it to the AnType field.
func (o *HsmfUpdateData) SetAnType(v AccessType) {
	o.AnType = &v
}

// GetRatType returns the RatType field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetRatType() RatType {
	if o == nil || IsNil(o.RatType) {
		var ret RatType
		return ret
	}
	return *o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRatTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RatType) {
		return nil, false
	}
	return o.RatType, true
}

// HasRatType returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasRatType() bool {
	if o != nil && !IsNil(o.RatType) {
		return true
	}

	return false
}

// SetRatType gets a reference to the given RatType and assigns it to the RatType field.
func (o *HsmfUpdateData) SetRatType(v RatType) {
	o.RatType = &v
}

// GetUeLocation returns the UeLocation field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUeLocation() UserLocation {
	if o == nil || IsNil(o.UeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.UeLocation
}

// GetUeLocationOk returns a tuple with the UeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUeLocationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UeLocation) {
		return nil, false
	}
	return o.UeLocation, true
}

// HasUeLocation returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUeLocation() bool {
	if o != nil && !IsNil(o.UeLocation) {
		return true
	}

	return false
}

// SetUeLocation gets a reference to the given UserLocation and assigns it to the UeLocation field.
func (o *HsmfUpdateData) SetUeLocation(v UserLocation) {
	o.UeLocation = &v
}

// GetUeTimeZone returns the UeTimeZone field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUeTimeZone() string {
	if o == nil || IsNil(o.UeTimeZone) {
		var ret string
		return ret
	}
	return *o.UeTimeZone
}

// GetUeTimeZoneOk returns a tuple with the UeTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUeTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UeTimeZone) {
		return nil, false
	}
	return o.UeTimeZone, true
}

// HasUeTimeZone returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUeTimeZone() bool {
	if o != nil && !IsNil(o.UeTimeZone) {
		return true
	}

	return false
}

// SetUeTimeZone gets a reference to the given string and assigns it to the UeTimeZone field.
func (o *HsmfUpdateData) SetUeTimeZone(v string) {
	o.UeTimeZone = &v
}

// GetAddUeLocation returns the AddUeLocation field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAddUeLocation() UserLocation {
	if o == nil || IsNil(o.AddUeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.AddUeLocation
}

// GetAddUeLocationOk returns a tuple with the AddUeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAddUeLocationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.AddUeLocation) {
		return nil, false
	}
	return o.AddUeLocation, true
}

// HasAddUeLocation returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAddUeLocation() bool {
	if o != nil && !IsNil(o.AddUeLocation) {
		return true
	}

	return false
}

// SetAddUeLocation gets a reference to the given UserLocation and assigns it to the AddUeLocation field.
func (o *HsmfUpdateData) SetAddUeLocation(v UserLocation) {
	o.AddUeLocation = &v
}

// GetPauseCharging returns the PauseCharging field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPauseCharging() bool {
	if o == nil || IsNil(o.PauseCharging) {
		var ret bool
		return ret
	}
	return *o.PauseCharging
}

// GetPauseChargingOk returns a tuple with the PauseCharging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPauseChargingOk() (*bool, bool) {
	if o == nil || IsNil(o.PauseCharging) {
		return nil, false
	}
	return o.PauseCharging, true
}

// HasPauseCharging returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPauseCharging() bool {
	if o != nil && !IsNil(o.PauseCharging) {
		return true
	}

	return false
}

// SetPauseCharging gets a reference to the given bool and assigns it to the PauseCharging field.
func (o *HsmfUpdateData) SetPauseCharging(v bool) {
	o.PauseCharging = &v
}

// GetPti returns the Pti field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPti() int32 {
	if o == nil || IsNil(o.Pti) {
		var ret int32
		return ret
	}
	return *o.Pti
}

// GetPtiOk returns a tuple with the Pti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPtiOk() (*int32, bool) {
	if o == nil || IsNil(o.Pti) {
		return nil, false
	}
	return o.Pti, true
}

// HasPti returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPti() bool {
	if o != nil && !IsNil(o.Pti) {
		return true
	}

	return false
}

// SetPti gets a reference to the given int32 and assigns it to the Pti field.
func (o *HsmfUpdateData) SetPti(v int32) {
	o.Pti = &v
}

// GetN1SmInfoFromUe returns the N1SmInfoFromUe field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetN1SmInfoFromUe() RefToBinaryData {
	if o == nil || IsNil(o.N1SmInfoFromUe) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N1SmInfoFromUe
}

// GetN1SmInfoFromUeOk returns a tuple with the N1SmInfoFromUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetN1SmInfoFromUeOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N1SmInfoFromUe) {
		return nil, false
	}
	return o.N1SmInfoFromUe, true
}

// HasN1SmInfoFromUe returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasN1SmInfoFromUe() bool {
	if o != nil && !IsNil(o.N1SmInfoFromUe) {
		return true
	}

	return false
}

// SetN1SmInfoFromUe gets a reference to the given RefToBinaryData and assigns it to the N1SmInfoFromUe field.
func (o *HsmfUpdateData) SetN1SmInfoFromUe(v RefToBinaryData) {
	o.N1SmInfoFromUe = &v
}

// GetUnknownN1SmInfo returns the UnknownN1SmInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUnknownN1SmInfo() RefToBinaryData {
	if o == nil || IsNil(o.UnknownN1SmInfo) {
		var ret RefToBinaryData
		return ret
	}
	return *o.UnknownN1SmInfo
}

// GetUnknownN1SmInfoOk returns a tuple with the UnknownN1SmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUnknownN1SmInfoOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.UnknownN1SmInfo) {
		return nil, false
	}
	return o.UnknownN1SmInfo, true
}

// HasUnknownN1SmInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUnknownN1SmInfo() bool {
	if o != nil && !IsNil(o.UnknownN1SmInfo) {
		return true
	}

	return false
}

// SetUnknownN1SmInfo gets a reference to the given RefToBinaryData and assigns it to the UnknownN1SmInfo field.
func (o *HsmfUpdateData) SetUnknownN1SmInfo(v RefToBinaryData) {
	o.UnknownN1SmInfo = &v
}

// GetQosFlowsRelNotifyList returns the QosFlowsRelNotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetQosFlowsRelNotifyList() []QosFlowItem {
	if o == nil || IsNil(o.QosFlowsRelNotifyList) {
		var ret []QosFlowItem
		return ret
	}
	return o.QosFlowsRelNotifyList
}

// GetQosFlowsRelNotifyListOk returns a tuple with the QosFlowsRelNotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetQosFlowsRelNotifyListOk() ([]QosFlowItem, bool) {
	if o == nil || IsNil(o.QosFlowsRelNotifyList) {
		return nil, false
	}
	return o.QosFlowsRelNotifyList, true
}

// HasQosFlowsRelNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasQosFlowsRelNotifyList() bool {
	if o != nil && !IsNil(o.QosFlowsRelNotifyList) {
		return true
	}

	return false
}

// SetQosFlowsRelNotifyList gets a reference to the given []QosFlowItem and assigns it to the QosFlowsRelNotifyList field.
func (o *HsmfUpdateData) SetQosFlowsRelNotifyList(v []QosFlowItem) {
	o.QosFlowsRelNotifyList = v
}

// GetQosFlowsNotifyList returns the QosFlowsNotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetQosFlowsNotifyList() []QosFlowNotifyItem {
	if o == nil || IsNil(o.QosFlowsNotifyList) {
		var ret []QosFlowNotifyItem
		return ret
	}
	return o.QosFlowsNotifyList
}

// GetQosFlowsNotifyListOk returns a tuple with the QosFlowsNotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetQosFlowsNotifyListOk() ([]QosFlowNotifyItem, bool) {
	if o == nil || IsNil(o.QosFlowsNotifyList) {
		return nil, false
	}
	return o.QosFlowsNotifyList, true
}

// HasQosFlowsNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasQosFlowsNotifyList() bool {
	if o != nil && !IsNil(o.QosFlowsNotifyList) {
		return true
	}

	return false
}

// SetQosFlowsNotifyList gets a reference to the given []QosFlowNotifyItem and assigns it to the QosFlowsNotifyList field.
func (o *HsmfUpdateData) SetQosFlowsNotifyList(v []QosFlowNotifyItem) {
	o.QosFlowsNotifyList = v
}

// GetNotifyList returns the NotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetNotifyList() []PduSessionNotifyItem {
	if o == nil || IsNil(o.NotifyList) {
		var ret []PduSessionNotifyItem
		return ret
	}
	return o.NotifyList
}

// GetNotifyListOk returns a tuple with the NotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetNotifyListOk() ([]PduSessionNotifyItem, bool) {
	if o == nil || IsNil(o.NotifyList) {
		return nil, false
	}
	return o.NotifyList, true
}

// HasNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasNotifyList() bool {
	if o != nil && !IsNil(o.NotifyList) {
		return true
	}

	return false
}

// SetNotifyList gets a reference to the given []PduSessionNotifyItem and assigns it to the NotifyList field.
func (o *HsmfUpdateData) SetNotifyList(v []PduSessionNotifyItem) {
	o.NotifyList = v
}

// GetEpsBearerId returns the EpsBearerId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetEpsBearerId() []int32 {
	if o == nil || IsNil(o.EpsBearerId) {
		var ret []int32
		return ret
	}
	return o.EpsBearerId
}

// GetEpsBearerIdOk returns a tuple with the EpsBearerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetEpsBearerIdOk() ([]int32, bool) {
	if o == nil || IsNil(o.EpsBearerId) {
		return nil, false
	}
	return o.EpsBearerId, true
}

// HasEpsBearerId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasEpsBearerId() bool {
	if o != nil && !IsNil(o.EpsBearerId) {
		return true
	}

	return false
}

// SetEpsBearerId gets a reference to the given []int32 and assigns it to the EpsBearerId field.
func (o *HsmfUpdateData) SetEpsBearerId(v []int32) {
	o.EpsBearerId = v
}

// GetHoPreparationIndication returns the HoPreparationIndication field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetHoPreparationIndication() bool {
	if o == nil || IsNil(o.HoPreparationIndication) {
		var ret bool
		return ret
	}
	return *o.HoPreparationIndication
}

// GetHoPreparationIndicationOk returns a tuple with the HoPreparationIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetHoPreparationIndicationOk() (*bool, bool) {
	if o == nil || IsNil(o.HoPreparationIndication) {
		return nil, false
	}
	return o.HoPreparationIndication, true
}

// HasHoPreparationIndication returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasHoPreparationIndication() bool {
	if o != nil && !IsNil(o.HoPreparationIndication) {
		return true
	}

	return false
}

// SetHoPreparationIndication gets a reference to the given bool and assigns it to the HoPreparationIndication field.
func (o *HsmfUpdateData) SetHoPreparationIndication(v bool) {
	o.HoPreparationIndication = &v
}

// GetRevokeEbiList returns the RevokeEbiList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetRevokeEbiList() []int32 {
	if o == nil || IsNil(o.RevokeEbiList) {
		var ret []int32
		return ret
	}
	return o.RevokeEbiList
}

// GetRevokeEbiListOk returns a tuple with the RevokeEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRevokeEbiListOk() ([]int32, bool) {
	if o == nil || IsNil(o.RevokeEbiList) {
		return nil, false
	}
	return o.RevokeEbiList, true
}

// HasRevokeEbiList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasRevokeEbiList() bool {
	if o != nil && !IsNil(o.RevokeEbiList) {
		return true
	}

	return false
}

// SetRevokeEbiList gets a reference to the given []int32 and assigns it to the RevokeEbiList field.
func (o *HsmfUpdateData) SetRevokeEbiList(v []int32) {
	o.RevokeEbiList = v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetCause() Cause {
	if o == nil || IsNil(o.Cause) {
		var ret Cause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetCauseOk() (*Cause, bool) {
	if o == nil || IsNil(o.Cause) {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasCause() bool {
	if o != nil && !IsNil(o.Cause) {
		return true
	}

	return false
}

// SetCause gets a reference to the given Cause and assigns it to the Cause field.
func (o *HsmfUpdateData) SetCause(v Cause) {
	o.Cause = &v
}

// GetNgApCause returns the NgApCause field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetNgApCause() NgApCause {
	if o == nil || IsNil(o.NgApCause) {
		var ret NgApCause
		return ret
	}
	return *o.NgApCause
}

// GetNgApCauseOk returns a tuple with the NgApCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetNgApCauseOk() (*NgApCause, bool) {
	if o == nil || IsNil(o.NgApCause) {
		return nil, false
	}
	return o.NgApCause, true
}

// HasNgApCause returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasNgApCause() bool {
	if o != nil && !IsNil(o.NgApCause) {
		return true
	}

	return false
}

// SetNgApCause gets a reference to the given NgApCause and assigns it to the NgApCause field.
func (o *HsmfUpdateData) SetNgApCause(v NgApCause) {
	o.NgApCause = &v
}

// GetVar5gMmCauseValue returns the Var5gMmCauseValue field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVar5gMmCauseValue() int32 {
	if o == nil || IsNil(o.Var5gMmCauseValue) {
		var ret int32
		return ret
	}
	return *o.Var5gMmCauseValue
}

// GetVar5gMmCauseValueOk returns a tuple with the Var5gMmCauseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVar5gMmCauseValueOk() (*int32, bool) {
	if o == nil || IsNil(o.Var5gMmCauseValue) {
		return nil, false
	}
	return o.Var5gMmCauseValue, true
}

// HasVar5gMmCauseValue returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVar5gMmCauseValue() bool {
	if o != nil && !IsNil(o.Var5gMmCauseValue) {
		return true
	}

	return false
}

// SetVar5gMmCauseValue gets a reference to the given int32 and assigns it to the Var5gMmCauseValue field.
func (o *HsmfUpdateData) SetVar5gMmCauseValue(v int32) {
	o.Var5gMmCauseValue = &v
}

// GetAlwaysOnRequested returns the AlwaysOnRequested field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAlwaysOnRequested() bool {
	if o == nil || IsNil(o.AlwaysOnRequested) {
		var ret bool
		return ret
	}
	return *o.AlwaysOnRequested
}

// GetAlwaysOnRequestedOk returns a tuple with the AlwaysOnRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAlwaysOnRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysOnRequested) {
		return nil, false
	}
	return o.AlwaysOnRequested, true
}

// HasAlwaysOnRequested returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAlwaysOnRequested() bool {
	if o != nil && !IsNil(o.AlwaysOnRequested) {
		return true
	}

	return false
}

// SetAlwaysOnRequested gets a reference to the given bool and assigns it to the AlwaysOnRequested field.
func (o *HsmfUpdateData) SetAlwaysOnRequested(v bool) {
	o.AlwaysOnRequested = &v
}

// GetEpsInterworkingInd returns the EpsInterworkingInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetEpsInterworkingInd() EpsInterworkingIndication {
	if o == nil || IsNil(o.EpsInterworkingInd) {
		var ret EpsInterworkingIndication
		return ret
	}
	return *o.EpsInterworkingInd
}

// GetEpsInterworkingIndOk returns a tuple with the EpsInterworkingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetEpsInterworkingIndOk() (*EpsInterworkingIndication, bool) {
	if o == nil || IsNil(o.EpsInterworkingInd) {
		return nil, false
	}
	return o.EpsInterworkingInd, true
}

// HasEpsInterworkingInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasEpsInterworkingInd() bool {
	if o != nil && !IsNil(o.EpsInterworkingInd) {
		return true
	}

	return false
}

// SetEpsInterworkingInd gets a reference to the given EpsInterworkingIndication and assigns it to the EpsInterworkingInd field.
func (o *HsmfUpdateData) SetEpsInterworkingInd(v EpsInterworkingIndication) {
	o.EpsInterworkingInd = &v
}

// GetSecondaryRatUsageReport returns the SecondaryRatUsageReport field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecondaryRatUsageReport() []SecondaryRatUsageReport {
	if o == nil || IsNil(o.SecondaryRatUsageReport) {
		var ret []SecondaryRatUsageReport
		return ret
	}
	return o.SecondaryRatUsageReport
}

// GetSecondaryRatUsageReportOk returns a tuple with the SecondaryRatUsageReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecondaryRatUsageReportOk() ([]SecondaryRatUsageReport, bool) {
	if o == nil || IsNil(o.SecondaryRatUsageReport) {
		return nil, false
	}
	return o.SecondaryRatUsageReport, true
}

// HasSecondaryRatUsageReport returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecondaryRatUsageReport() bool {
	if o != nil && !IsNil(o.SecondaryRatUsageReport) {
		return true
	}

	return false
}

// SetSecondaryRatUsageReport gets a reference to the given []SecondaryRatUsageReport and assigns it to the SecondaryRatUsageReport field.
func (o *HsmfUpdateData) SetSecondaryRatUsageReport(v []SecondaryRatUsageReport) {
	o.SecondaryRatUsageReport = v
}

// GetSecondaryRatUsageInfo returns the SecondaryRatUsageInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecondaryRatUsageInfo() []SecondaryRatUsageInfo {
	if o == nil || IsNil(o.SecondaryRatUsageInfo) {
		var ret []SecondaryRatUsageInfo
		return ret
	}
	return o.SecondaryRatUsageInfo
}

// GetSecondaryRatUsageInfoOk returns a tuple with the SecondaryRatUsageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecondaryRatUsageInfoOk() ([]SecondaryRatUsageInfo, bool) {
	if o == nil || IsNil(o.SecondaryRatUsageInfo) {
		return nil, false
	}
	return o.SecondaryRatUsageInfo, true
}

// HasSecondaryRatUsageInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecondaryRatUsageInfo() bool {
	if o != nil && !IsNil(o.SecondaryRatUsageInfo) {
		return true
	}

	return false
}

// SetSecondaryRatUsageInfo gets a reference to the given []SecondaryRatUsageInfo and assigns it to the SecondaryRatUsageInfo field.
func (o *HsmfUpdateData) SetSecondaryRatUsageInfo(v []SecondaryRatUsageInfo) {
	o.SecondaryRatUsageInfo = v
}

// GetAnTypeCanBeChanged returns the AnTypeCanBeChanged field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAnTypeCanBeChanged() bool {
	if o == nil || IsNil(o.AnTypeCanBeChanged) {
		var ret bool
		return ret
	}
	return *o.AnTypeCanBeChanged
}

// GetAnTypeCanBeChangedOk returns a tuple with the AnTypeCanBeChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAnTypeCanBeChangedOk() (*bool, bool) {
	if o == nil || IsNil(o.AnTypeCanBeChanged) {
		return nil, false
	}
	return o.AnTypeCanBeChanged, true
}

// HasAnTypeCanBeChanged returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAnTypeCanBeChanged() bool {
	if o != nil && !IsNil(o.AnTypeCanBeChanged) {
		return true
	}

	return false
}

// SetAnTypeCanBeChanged gets a reference to the given bool and assigns it to the AnTypeCanBeChanged field.
func (o *HsmfUpdateData) SetAnTypeCanBeChanged(v bool) {
	o.AnTypeCanBeChanged = &v
}

func (o HsmfUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HsmfUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestIndication"] = o.RequestIndication
	if !IsNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !IsNil(o.VcnTunnelInfo) {
		toSerialize["vcnTunnelInfo"] = o.VcnTunnelInfo
	}
	if !IsNil(o.ServingNetwork) {
		toSerialize["servingNetwork"] = o.ServingNetwork
	}
	if !IsNil(o.AnType) {
		toSerialize["anType"] = o.AnType
	}
	if !IsNil(o.RatType) {
		toSerialize["ratType"] = o.RatType
	}
	if !IsNil(o.UeLocation) {
		toSerialize["ueLocation"] = o.UeLocation
	}
	if !IsNil(o.UeTimeZone) {
		toSerialize["ueTimeZone"] = o.UeTimeZone
	}
	if !IsNil(o.AddUeLocation) {
		toSerialize["addUeLocation"] = o.AddUeLocation
	}
	if !IsNil(o.PauseCharging) {
		toSerialize["pauseCharging"] = o.PauseCharging
	}
	if !IsNil(o.Pti) {
		toSerialize["pti"] = o.Pti
	}
	if !IsNil(o.N1SmInfoFromUe) {
		toSerialize["n1SmInfoFromUe"] = o.N1SmInfoFromUe
	}
	if !IsNil(o.UnknownN1SmInfo) {
		toSerialize["unknownN1SmInfo"] = o.UnknownN1SmInfo
	}
	if !IsNil(o.QosFlowsRelNotifyList) {
		toSerialize["qosFlowsRelNotifyList"] = o.QosFlowsRelNotifyList
	}
	if !IsNil(o.QosFlowsNotifyList) {
		toSerialize["qosFlowsNotifyList"] = o.QosFlowsNotifyList
	}
	if !IsNil(o.NotifyList) {
		toSerialize["NotifyList"] = o.NotifyList
	}
	if !IsNil(o.EpsBearerId) {
		toSerialize["epsBearerId"] = o.EpsBearerId
	}
	if !IsNil(o.HoPreparationIndication) {
		toSerialize["hoPreparationIndication"] = o.HoPreparationIndication
	}
	if !IsNil(o.RevokeEbiList) {
		toSerialize["revokeEbiList"] = o.RevokeEbiList
	}
	if !IsNil(o.Cause) {
		toSerialize["cause"] = o.Cause
	}
	if !IsNil(o.NgApCause) {
		toSerialize["ngApCause"] = o.NgApCause
	}
	if !IsNil(o.Var5gMmCauseValue) {
		toSerialize["5gMmCauseValue"] = o.Var5gMmCauseValue
	}
	if !IsNil(o.AlwaysOnRequested) {
		toSerialize["alwaysOnRequested"] = o.AlwaysOnRequested
	}
	if !IsNil(o.EpsInterworkingInd) {
		toSerialize["epsInterworkingInd"] = o.EpsInterworkingInd
	}
	if !IsNil(o.SecondaryRatUsageReport) {
		toSerialize["secondaryRatUsageReport"] = o.SecondaryRatUsageReport
	}
	if !IsNil(o.SecondaryRatUsageInfo) {
		toSerialize["secondaryRatUsageInfo"] = o.SecondaryRatUsageInfo
	}
	if !IsNil(o.AnTypeCanBeChanged) {
		toSerialize["anTypeCanBeChanged"] = o.AnTypeCanBeChanged
	}
	return toSerialize, nil
}

type NullableHsmfUpdateData struct {
	value *HsmfUpdateData
	isSet bool
}

func (v NullableHsmfUpdateData) Get() *HsmfUpdateData {
	return v.value
}

func (v *NullableHsmfUpdateData) Set(val *HsmfUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableHsmfUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableHsmfUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHsmfUpdateData(val *HsmfUpdateData) *NullableHsmfUpdateData {
	return &NullableHsmfUpdateData{value: val, isSet: true}
}

func (v NullableHsmfUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHsmfUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


