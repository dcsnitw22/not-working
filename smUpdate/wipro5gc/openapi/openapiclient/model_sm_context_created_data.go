/*
Nsmf_PDUSession

SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
	"time"
)

// checks if the SmContextCreatedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmContextCreatedData{}

// SmContextCreatedData struct for SmContextCreatedData
type SmContextCreatedData struct {
	HSmfUri *string `json:"hSmfUri,omitempty"`
	PduSessionId *int32 `json:"pduSessionId,omitempty"`
	SNssai *Snssai `json:"sNssai,omitempty"`
	UpCnxState *UpCnxState `json:"upCnxState,omitempty"`
	N2SmInfo *RefToBinaryData `json:"n2SmInfo,omitempty"`
	N2SmInfoType *N2SmInfoType `json:"n2SmInfoType,omitempty"`
	AllocatedEbiList []EbiArpMapping `json:"allocatedEbiList,omitempty"`
	HoState *HoState `json:"hoState,omitempty"`
	Gpsi *string `json:"gpsi,omitempty"`
	SmfServiceInstanceId *string `json:"smfServiceInstanceId,omitempty"`
	RecoveryTime *time.Time `json:"recoveryTime,omitempty"`
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewSmContextCreatedData instantiates a new SmContextCreatedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmContextCreatedData() *SmContextCreatedData {
	this := SmContextCreatedData{}
	return &this
}

// NewSmContextCreatedDataWithDefaults instantiates a new SmContextCreatedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmContextCreatedDataWithDefaults() *SmContextCreatedData {
	this := SmContextCreatedData{}
	return &this
}

// GetHSmfUri returns the HSmfUri field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetHSmfUri() string {
	if o == nil || IsNil(o.HSmfUri) {
		var ret string
		return ret
	}
	return *o.HSmfUri
}

// GetHSmfUriOk returns a tuple with the HSmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetHSmfUriOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfUri) {
		return nil, false
	}
	return o.HSmfUri, true
}

// HasHSmfUri returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasHSmfUri() bool {
	if o != nil && !IsNil(o.HSmfUri) {
		return true
	}

	return false
}

// SetHSmfUri gets a reference to the given string and assigns it to the HSmfUri field.
func (o *SmContextCreatedData) SetHSmfUri(v string) {
	o.HSmfUri = &v
}

// GetPduSessionId returns the PduSessionId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetPduSessionId() int32 {
	if o == nil || IsNil(o.PduSessionId) {
		var ret int32
		return ret
	}
	return *o.PduSessionId
}

// GetPduSessionIdOk returns a tuple with the PduSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetPduSessionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PduSessionId) {
		return nil, false
	}
	return o.PduSessionId, true
}

// HasPduSessionId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasPduSessionId() bool {
	if o != nil && !IsNil(o.PduSessionId) {
		return true
	}

	return false
}

// SetPduSessionId gets a reference to the given int32 and assigns it to the PduSessionId field.
func (o *SmContextCreatedData) SetPduSessionId(v int32) {
	o.PduSessionId = &v
}

// GetSNssai returns the SNssai field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSNssai() Snssai {
	if o == nil || IsNil(o.SNssai) {
		var ret Snssai
		return ret
	}
	return *o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSNssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.SNssai) {
		return nil, false
	}
	return o.SNssai, true
}

// HasSNssai returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSNssai() bool {
	if o != nil && !IsNil(o.SNssai) {
		return true
	}

	return false
}

// SetSNssai gets a reference to the given Snssai and assigns it to the SNssai field.
func (o *SmContextCreatedData) SetSNssai(v Snssai) {
	o.SNssai = &v
}

// GetUpCnxState returns the UpCnxState field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetUpCnxState() UpCnxState {
	if o == nil || IsNil(o.UpCnxState) {
		var ret UpCnxState
		return ret
	}
	return *o.UpCnxState
}

// GetUpCnxStateOk returns a tuple with the UpCnxState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetUpCnxStateOk() (*UpCnxState, bool) {
	if o == nil || IsNil(o.UpCnxState) {
		return nil, false
	}
	return o.UpCnxState, true
}

// HasUpCnxState returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasUpCnxState() bool {
	if o != nil && !IsNil(o.UpCnxState) {
		return true
	}

	return false
}

// SetUpCnxState gets a reference to the given UpCnxState and assigns it to the UpCnxState field.
func (o *SmContextCreatedData) SetUpCnxState(v UpCnxState) {
	o.UpCnxState = &v
}

// GetN2SmInfo returns the N2SmInfo field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetN2SmInfo() RefToBinaryData {
	if o == nil || IsNil(o.N2SmInfo) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N2SmInfo
}

// GetN2SmInfoOk returns a tuple with the N2SmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetN2SmInfoOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N2SmInfo) {
		return nil, false
	}
	return o.N2SmInfo, true
}

// HasN2SmInfo returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasN2SmInfo() bool {
	if o != nil && !IsNil(o.N2SmInfo) {
		return true
	}

	return false
}

// SetN2SmInfo gets a reference to the given RefToBinaryData and assigns it to the N2SmInfo field.
func (o *SmContextCreatedData) SetN2SmInfo(v RefToBinaryData) {
	o.N2SmInfo = &v
}

// GetN2SmInfoType returns the N2SmInfoType field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetN2SmInfoType() N2SmInfoType {
	if o == nil || IsNil(o.N2SmInfoType) {
		var ret N2SmInfoType
		return ret
	}
	return *o.N2SmInfoType
}

// GetN2SmInfoTypeOk returns a tuple with the N2SmInfoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetN2SmInfoTypeOk() (*N2SmInfoType, bool) {
	if o == nil || IsNil(o.N2SmInfoType) {
		return nil, false
	}
	return o.N2SmInfoType, true
}

// HasN2SmInfoType returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasN2SmInfoType() bool {
	if o != nil && !IsNil(o.N2SmInfoType) {
		return true
	}

	return false
}

// SetN2SmInfoType gets a reference to the given N2SmInfoType and assigns it to the N2SmInfoType field.
func (o *SmContextCreatedData) SetN2SmInfoType(v N2SmInfoType) {
	o.N2SmInfoType = &v
}

// GetAllocatedEbiList returns the AllocatedEbiList field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetAllocatedEbiList() []EbiArpMapping {
	if o == nil || IsNil(o.AllocatedEbiList) {
		var ret []EbiArpMapping
		return ret
	}
	return o.AllocatedEbiList
}

// GetAllocatedEbiListOk returns a tuple with the AllocatedEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetAllocatedEbiListOk() ([]EbiArpMapping, bool) {
	if o == nil || IsNil(o.AllocatedEbiList) {
		return nil, false
	}
	return o.AllocatedEbiList, true
}

// HasAllocatedEbiList returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasAllocatedEbiList() bool {
	if o != nil && !IsNil(o.AllocatedEbiList) {
		return true
	}

	return false
}

// SetAllocatedEbiList gets a reference to the given []EbiArpMapping and assigns it to the AllocatedEbiList field.
func (o *SmContextCreatedData) SetAllocatedEbiList(v []EbiArpMapping) {
	o.AllocatedEbiList = v
}

// GetHoState returns the HoState field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetHoState() HoState {
	if o == nil || IsNil(o.HoState) {
		var ret HoState
		return ret
	}
	return *o.HoState
}

// GetHoStateOk returns a tuple with the HoState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetHoStateOk() (*HoState, bool) {
	if o == nil || IsNil(o.HoState) {
		return nil, false
	}
	return o.HoState, true
}

// HasHoState returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasHoState() bool {
	if o != nil && !IsNil(o.HoState) {
		return true
	}

	return false
}

// SetHoState gets a reference to the given HoState and assigns it to the HoState field.
func (o *SmContextCreatedData) SetHoState(v HoState) {
	o.HoState = &v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetGpsi() string {
	if o == nil || IsNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetGpsiOk() (*string, bool) {
	if o == nil || IsNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasGpsi() bool {
	if o != nil && !IsNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *SmContextCreatedData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetSmfServiceInstanceId returns the SmfServiceInstanceId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSmfServiceInstanceId() string {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.SmfServiceInstanceId
}

// GetSmfServiceInstanceIdOk returns a tuple with the SmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		return nil, false
	}
	return o.SmfServiceInstanceId, true
}

// HasSmfServiceInstanceId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSmfServiceInstanceId() bool {
	if o != nil && !IsNil(o.SmfServiceInstanceId) {
		return true
	}

	return false
}

// SetSmfServiceInstanceId gets a reference to the given string and assigns it to the SmfServiceInstanceId field.
func (o *SmContextCreatedData) SetSmfServiceInstanceId(v string) {
	o.SmfServiceInstanceId = &v
}

// GetRecoveryTime returns the RecoveryTime field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetRecoveryTime() time.Time {
	if o == nil || IsNil(o.RecoveryTime) {
		var ret time.Time
		return ret
	}
	return *o.RecoveryTime
}

// GetRecoveryTimeOk returns a tuple with the RecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetRecoveryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecoveryTime) {
		return nil, false
	}
	return o.RecoveryTime, true
}

// HasRecoveryTime returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasRecoveryTime() bool {
	if o != nil && !IsNil(o.RecoveryTime) {
		return true
	}

	return false
}

// SetRecoveryTime gets a reference to the given time.Time and assigns it to the RecoveryTime field.
func (o *SmContextCreatedData) SetRecoveryTime(v time.Time) {
	o.RecoveryTime = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *SmContextCreatedData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o SmContextCreatedData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmContextCreatedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HSmfUri) {
		toSerialize["hSmfUri"] = o.HSmfUri
	}
	if !IsNil(o.PduSessionId) {
		toSerialize["pduSessionId"] = o.PduSessionId
	}
	if !IsNil(o.SNssai) {
		toSerialize["sNssai"] = o.SNssai
	}
	if !IsNil(o.UpCnxState) {
		toSerialize["upCnxState"] = o.UpCnxState
	}
	if !IsNil(o.N2SmInfo) {
		toSerialize["n2SmInfo"] = o.N2SmInfo
	}
	if !IsNil(o.N2SmInfoType) {
		toSerialize["n2SmInfoType"] = o.N2SmInfoType
	}
	if !IsNil(o.AllocatedEbiList) {
		toSerialize["allocatedEbiList"] = o.AllocatedEbiList
	}
	if !IsNil(o.HoState) {
		toSerialize["hoState"] = o.HoState
	}
	if !IsNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !IsNil(o.SmfServiceInstanceId) {
		toSerialize["smfServiceInstanceId"] = o.SmfServiceInstanceId
	}
	if !IsNil(o.RecoveryTime) {
		toSerialize["recoveryTime"] = o.RecoveryTime
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableSmContextCreatedData struct {
	value *SmContextCreatedData
	isSet bool
}

func (v NullableSmContextCreatedData) Get() *SmContextCreatedData {
	return v.value
}

func (v *NullableSmContextCreatedData) Set(val *SmContextCreatedData) {
	v.value = val
	v.isSet = true
}

func (v NullableSmContextCreatedData) IsSet() bool {
	return v.isSet
}

func (v *NullableSmContextCreatedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmContextCreatedData(val *SmContextCreatedData) *NullableSmContextCreatedData {
	return &NullableSmContextCreatedData{value: val, isSet: true}
}

func (v NullableSmContextCreatedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmContextCreatedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


