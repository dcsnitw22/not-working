/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.0.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapiserver

import (
	"encoding/json"
	"errors"
)

type QosFlowProfile struct {
	Var5qi int32 `json:"5qi"`

	NonDynamic5Qi NonDynamic5Qi `json:"nonDynamic5Qi,omitempty"`

	Dynamic5Qi Dynamic5Qi `json:"dynamic5Qi,omitempty"`

	Arp Arp `json:"arp,omitempty"`

	GbrQosFlowInfo GbrQosFlowInformation `json:"gbrQosFlowInfo,omitempty"`

	Rqa ReflectiveQoSAttribute `json:"rqa,omitempty"`

	AdditionalQosFlowInfo *AdditionalQosFlowInfo `json:"additionalQosFlowInfo,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *QosFlowProfile) UnmarshalJSON(data []byte) error {

	type Alias QosFlowProfile // To avoid infinite recursion
	return json.Unmarshal(data, (*Alias)(m))
}

// AssertQosFlowProfileRequired checks if the required fields are not zero-ed
func AssertQosFlowProfileRequired(obj QosFlowProfile) error {
	elements := map[string]interface{}{
		"5qi": obj.Var5qi,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNonDynamic5QiRequired(obj.NonDynamic5Qi); err != nil {
		return err
	}
	if err := AssertDynamic5QiRequired(obj.Dynamic5Qi); err != nil {
		return err
	}
	if err := AssertArpRequired(obj.Arp); err != nil {
		return err
	}
	if err := AssertGbrQosFlowInformationRequired(obj.GbrQosFlowInfo); err != nil {
		return err
	}
	if err := AssertReflectiveQoSAttributeRequired(obj.Rqa); err != nil {
		return err
	}
	if obj.AdditionalQosFlowInfo != nil {
		if err := AssertAdditionalQosFlowInfoRequired(*obj.AdditionalQosFlowInfo); err != nil {
			return err
		}
	}
	return nil
}

// AssertQosFlowProfileConstraints checks if the values respects the defined constraints
func AssertQosFlowProfileConstraints(obj QosFlowProfile) error {
	if obj.Var5qi < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Var5qi > 255 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
