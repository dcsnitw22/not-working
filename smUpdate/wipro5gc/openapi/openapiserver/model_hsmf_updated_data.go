/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.0.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapiserver

import (
	"encoding/json"
	"errors"
)

type HsmfUpdatedData struct {
	N1SmInfoToUe RefToBinaryData `json:"n1SmInfoToUe,omitempty"`

	QosFlowsSetupList []QosFlowSetupItem `json:"qosFlowsSetupList,omitempty"`

	SessionAmbr Ambr `json:"sessionAmbr,omitempty"`

	EpsPdnCnxInfo EpsPdnCnxInfo `json:"epsPdnCnxInfo,omitempty"`

	EpsBearerInfo []EpsBearerInfo `json:"epsBearerInfo,omitempty"`

	Pti int32 `json:"pti,omitempty"`

	UpSecurity UpSecurity `json:"upSecurity,omitempty"`

	MaxIntegrityProtectedDataRateUl MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateUl,omitempty"`

	MaxIntegrityProtectedDataRateDl MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateDl,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *HsmfUpdatedData) UnmarshalJSON(data []byte) error {

	type Alias HsmfUpdatedData // To avoid infinite recursion
	return json.Unmarshal(data, (*Alias)(m))
}

// AssertHsmfUpdatedDataRequired checks if the required fields are not zero-ed
func AssertHsmfUpdatedDataRequired(obj HsmfUpdatedData) error {
	if err := AssertRefToBinaryDataRequired(obj.N1SmInfoToUe); err != nil {
		return err
	}
	for _, el := range obj.QosFlowsSetupList {
		if err := AssertQosFlowSetupItemRequired(el); err != nil {
			return err
		}
	}
	if err := AssertAmbrRequired(obj.SessionAmbr); err != nil {
		return err
	}
	if err := AssertEpsPdnCnxInfoRequired(obj.EpsPdnCnxInfo); err != nil {
		return err
	}
	for _, el := range obj.EpsBearerInfo {
		if err := AssertEpsBearerInfoRequired(el); err != nil {
			return err
		}
	}
	if err := AssertUpSecurityRequired(obj.UpSecurity); err != nil {
		return err
	}
	if err := AssertMaxIntegrityProtectedDataRateRequired(obj.MaxIntegrityProtectedDataRateUl); err != nil {
		return err
	}
	if err := AssertMaxIntegrityProtectedDataRateRequired(obj.MaxIntegrityProtectedDataRateDl); err != nil {
		return err
	}
	return nil
}

// AssertHsmfUpdatedDataConstraints checks if the values respects the defined constraints
func AssertHsmfUpdatedDataConstraints(obj HsmfUpdatedData) error {
	if obj.Pti < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Pti > 255 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
