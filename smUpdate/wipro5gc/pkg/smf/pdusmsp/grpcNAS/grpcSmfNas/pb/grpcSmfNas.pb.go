// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: grpcSmfNas.proto

package pb

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PDU session Release Request Model
type PDUSRelReqModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSRelReqModel) Reset() {
	*x = PDUSRelReqModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSRelReqModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSRelReqModel) ProtoMessage() {}

func (x *PDUSRelReqModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSRelReqModel.ProtoReflect.Descriptor instead.
func (*PDUSRelReqModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{0}
}

func (x *PDUSRelReqModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSRelReqModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSRelReqModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSRelReqModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSRelReqModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// PDU session Release Reject Model
type PDUSRelRejModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSRelRejModel) Reset() {
	*x = PDUSRelRejModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSRelRejModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSRelRejModel) ProtoMessage() {}

func (x *PDUSRelRejModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSRelRejModel.ProtoReflect.Descriptor instead.
func (*PDUSRelRejModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{1}
}

func (x *PDUSRelRejModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSRelRejModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSRelRejModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSRelRejModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSRelRejModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// PDU session Release Command Model
type PDUSRelCommandModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSRelCommandModel) Reset() {
	*x = PDUSRelCommandModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSRelCommandModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSRelCommandModel) ProtoMessage() {}

func (x *PDUSRelCommandModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSRelCommandModel.ProtoReflect.Descriptor instead.
func (*PDUSRelCommandModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{2}
}

func (x *PDUSRelCommandModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSRelCommandModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSRelCommandModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSRelCommandModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSRelCommandModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// PDU session Release Complete Model
type PDUSRelCompleteModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSRelCompleteModel) Reset() {
	*x = PDUSRelCompleteModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSRelCompleteModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSRelCompleteModel) ProtoMessage() {}

func (x *PDUSRelCompleteModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSRelCompleteModel.ProtoReflect.Descriptor instead.
func (*PDUSRelCompleteModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{3}
}

func (x *PDUSRelCompleteModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSRelCompleteModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSRelCompleteModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSRelCompleteModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSRelCompleteModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// PDU session Modification Reject Model
type PDUSModRejModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID int32  `protobuf:"varint,2,opt,name=pdusessionID,proto3" json:"pdusessionID,omitempty"`
	Pti          int32  `protobuf:"varint,3,opt,name=pti,proto3" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSModRejModel) Reset() {
	*x = PDUSModRejModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSModRejModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSModRejModel) ProtoMessage() {}

func (x *PDUSModRejModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSModRejModel.ProtoReflect.Descriptor instead.
func (*PDUSModRejModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{4}
}

func (x *PDUSModRejModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSModRejModel) GetPdusessionID() int32 {
	if x != nil {
		return x.PdusessionID
	}
	return 0
}

func (x *PDUSModRejModel) GetPti() int32 {
	if x != nil {
		return x.Pti
	}
	return 0
}

func (x *PDUSModRejModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSModRejModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// PDU session Modification Request Model
type PDUSModReqModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
}

func (x *PDUSModReqModel) Reset() {
	*x = PDUSModReqModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSModReqModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSModReqModel) ProtoMessage() {}

func (x *PDUSModReqModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSModReqModel.ProtoReflect.Descriptor instead.
func (*PDUSModReqModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{5}
}

func (x *PDUSModReqModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSModReqModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSModReqModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSModReqModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

// Update Or Release Request Model
type UpRelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqType   string    `protobuf:"bytes,1,opt,name=reqType,proto3" json:"reqType,omitempty"`
	NasRelMsg *any1.Any `protobuf:"bytes,2,opt,name=nasRelMsg,proto3" json:"nasRelMsg,omitempty"`
}

func (x *UpRelRequest) Reset() {
	*x = UpRelRequest{}
	mi := &file_grpcSmfNas_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpRelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpRelRequest) ProtoMessage() {}

func (x *UpRelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpRelRequest.ProtoReflect.Descriptor instead.
func (*UpRelRequest) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{6}
}

func (x *UpRelRequest) GetReqType() string {
	if x != nil {
		return x.ReqType
	}
	return ""
}

func (x *UpRelRequest) GetNasRelMsg() *any1.Any {
	if x != nil {
		return x.NasRelMsg
	}
	return nil
}

// Update or Release Respone Model
type UpRelRespone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NasResponse *any1.Any `protobuf:"bytes,1,opt,name=nasResponse,proto3" json:"nasResponse,omitempty"`
	ReqType     string    `protobuf:"bytes,2,opt,name=reqType,proto3" json:"reqType,omitempty"`
	Error       string    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpRelRespone) Reset() {
	*x = UpRelRespone{}
	mi := &file_grpcSmfNas_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpRelRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpRelRespone) ProtoMessage() {}

func (x *UpRelRespone) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpRelRespone.ProtoReflect.Descriptor instead.
func (*UpRelRespone) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{7}
}

func (x *UpRelRespone) GetNasResponse() *any1.Any {
	if x != nil {
		return x.NasResponse
	}
	return nil
}

func (x *UpRelRespone) GetReqType() string {
	if x != nil {
		return x.ReqType
	}
	return ""
}

func (x *UpRelRespone) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// PDU session Establishment Request Model
type PDUSEstReqModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID *int32 `protobuf:"varint,2,opt,name=pdusessionID,proto3,oneof" json:"pdusessionID,omitempty"`
	Pti          *int32 `protobuf:"varint,3,opt,name=pti,proto3,oneof" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	DatarateUL   string `protobuf:"bytes,5,opt,name=datarateUL,proto3" json:"datarateUL,omitempty"`
	DatarateDL   string `protobuf:"bytes,6,opt,name=datarateDL,proto3" json:"datarateDL,omitempty"`
}

func (x *PDUSEstReqModel) Reset() {
	*x = PDUSEstReqModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSEstReqModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSEstReqModel) ProtoMessage() {}

func (x *PDUSEstReqModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSEstReqModel.ProtoReflect.Descriptor instead.
func (*PDUSEstReqModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{8}
}

func (x *PDUSEstReqModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSEstReqModel) GetPdusessionID() int32 {
	if x != nil && x.PdusessionID != nil {
		return *x.PdusessionID
	}
	return 0
}

func (x *PDUSEstReqModel) GetPti() int32 {
	if x != nil && x.Pti != nil {
		return *x.Pti
	}
	return 0
}

func (x *PDUSEstReqModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSEstReqModel) GetDatarateUL() string {
	if x != nil {
		return x.DatarateUL
	}
	return ""
}

func (x *PDUSEstReqModel) GetDatarateDL() string {
	if x != nil {
		return x.DatarateDL
	}
	return ""
}

// PDU session Establishment Reject Model
type PDUSEstRejModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd          string `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID int32  `protobuf:"varint,2,opt,name=pdusessionID,proto3" json:"pdusessionID,omitempty"`
	Pti          int32  `protobuf:"varint,3,opt,name=pti,proto3" json:"pti,omitempty"`
	MsgType      string `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	SmCause      string `protobuf:"bytes,5,opt,name=smCause,proto3" json:"smCause,omitempty"`
}

func (x *PDUSEstRejModel) Reset() {
	*x = PDUSEstRejModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSEstRejModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSEstRejModel) ProtoMessage() {}

func (x *PDUSEstRejModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSEstRejModel.ProtoReflect.Descriptor instead.
func (*PDUSEstRejModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{9}
}

func (x *PDUSEstRejModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSEstRejModel) GetPdusessionID() int32 {
	if x != nil {
		return x.PdusessionID
	}
	return 0
}

func (x *PDUSEstRejModel) GetPti() int32 {
	if x != nil {
		return x.Pti
	}
	return 0
}

func (x *PDUSEstRejModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSEstRejModel) GetSmCause() string {
	if x != nil {
		return x.SmCause
	}
	return ""
}

// Packet Filter Model for other modes
type PacketFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier uint32   `protobuf:"varint,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Direction  string   `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Components []string `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *PacketFilters) Reset() {
	*x = PacketFilters{}
	mi := &file_grpcSmfNas_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFilters) ProtoMessage() {}

func (x *PacketFilters) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFilters.ProtoReflect.Descriptor instead.
func (*PacketFilters) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{10}
}

func (x *PacketFilters) GetIdentifier() uint32 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *PacketFilters) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *PacketFilters) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

// Qos Rules Model
type QosRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qosidentifier string           `protobuf:"bytes,1,opt,name=qosidentifier,proto3" json:"qosidentifier,omitempty"`
	Operation     string           `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Dqr           string           `protobuf:"bytes,3,opt,name=dqr,proto3" json:"dqr,omitempty"`
	Pf            []*PacketFilters `protobuf:"bytes,4,rep,name=pf,proto3" json:"pf,omitempty"`
	Precidence    uint32           `protobuf:"varint,5,opt,name=precidence,proto3" json:"precidence,omitempty"`
	Seg           string           `protobuf:"bytes,6,opt,name=seg,proto3" json:"seg,omitempty"`
	Qfi           string           `protobuf:"bytes,7,opt,name=qfi,proto3" json:"qfi,omitempty"`
}

func (x *QosRules) Reset() {
	*x = QosRules{}
	mi := &file_grpcSmfNas_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QosRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosRules) ProtoMessage() {}

func (x *QosRules) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosRules.ProtoReflect.Descriptor instead.
func (*QosRules) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{11}
}

func (x *QosRules) GetQosidentifier() string {
	if x != nil {
		return x.Qosidentifier
	}
	return ""
}

func (x *QosRules) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *QosRules) GetDqr() string {
	if x != nil {
		return x.Dqr
	}
	return ""
}

func (x *QosRules) GetPf() []*PacketFilters {
	if x != nil {
		return x.Pf
	}
	return nil
}

func (x *QosRules) GetPrecidence() uint32 {
	if x != nil {
		return x.Precidence
	}
	return 0
}

func (x *QosRules) GetSeg() string {
	if x != nil {
		return x.Seg
	}
	return ""
}

func (x *QosRules) GetQfi() string {
	if x != nil {
		return x.Qfi
	}
	return ""
}

// Session AMBR model
type Sessionambr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iei    int32  `protobuf:"varint,1,opt,name=iei,proto3" json:"iei,omitempty"`
	UnitUL string `protobuf:"bytes,2,opt,name=unitUL,proto3" json:"unitUL,omitempty"`
	RateUL int32  `protobuf:"varint,3,opt,name=rateUL,proto3" json:"rateUL,omitempty"`
	UnitDL string `protobuf:"bytes,4,opt,name=unitDL,proto3" json:"unitDL,omitempty"`
	RateDL int32  `protobuf:"varint,5,opt,name=rateDL,proto3" json:"rateDL,omitempty"`
}

func (x *Sessionambr) Reset() {
	*x = Sessionambr{}
	mi := &file_grpcSmfNas_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sessionambr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sessionambr) ProtoMessage() {}

func (x *Sessionambr) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sessionambr.ProtoReflect.Descriptor instead.
func (*Sessionambr) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{12}
}

func (x *Sessionambr) GetIei() int32 {
	if x != nil {
		return x.Iei
	}
	return 0
}

func (x *Sessionambr) GetUnitUL() string {
	if x != nil {
		return x.UnitUL
	}
	return ""
}

func (x *Sessionambr) GetRateUL() int32 {
	if x != nil {
		return x.RateUL
	}
	return 0
}

func (x *Sessionambr) GetUnitDL() string {
	if x != nil {
		return x.UnitDL
	}
	return ""
}

func (x *Sessionambr) GetRateDL() int32 {
	if x != nil {
		return x.RateDL
	}
	return 0
}

// PDU session Establishment Accept Model
type PDUSEstAccModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epd               string       `protobuf:"bytes,1,opt,name=epd,proto3" json:"epd,omitempty"`
	PdusessionID      int32        `protobuf:"varint,2,opt,name=pdusessionID,proto3" json:"pdusessionID,omitempty"`
	Pti               int32        `protobuf:"varint,3,opt,name=pti,proto3" json:"pti,omitempty"`
	MsgType           string       `protobuf:"bytes,4,opt,name=msgType,proto3" json:"msgType,omitempty"`
	PdusType          string       `protobuf:"bytes,5,opt,name=pdusType,proto3" json:"pdusType,omitempty"`
	SscMode           string       `protobuf:"bytes,6,opt,name=sscMode,proto3" json:"sscMode,omitempty"`
	QosIEI            int32        `protobuf:"varint,7,opt,name=qosIEI,proto3" json:"qosIEI,omitempty"`
	Qosrules          []*QosRules  `protobuf:"bytes,8,rep,name=qosrules,proto3" json:"qosrules,omitempty"`
	Sessionambr       *Sessionambr `protobuf:"bytes,9,opt,name=sessionambr,proto3" json:"sessionambr,omitempty"`
	Si6Lla            string       `protobuf:"bytes,10,opt,name=Si6lla,proto3" json:"Si6lla,omitempty"`
	PduSessionTypeVal string       `protobuf:"bytes,11,opt,name=PduSessionTypeVal,proto3" json:"PduSessionTypeVal,omitempty"`
	PduAddrInfo       string       `protobuf:"bytes,12,opt,name=PduAddrInfo,proto3" json:"PduAddrInfo,omitempty"`
}

func (x *PDUSEstAccModel) Reset() {
	*x = PDUSEstAccModel{}
	mi := &file_grpcSmfNas_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDUSEstAccModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDUSEstAccModel) ProtoMessage() {}

func (x *PDUSEstAccModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDUSEstAccModel.ProtoReflect.Descriptor instead.
func (*PDUSEstAccModel) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{13}
}

func (x *PDUSEstAccModel) GetEpd() string {
	if x != nil {
		return x.Epd
	}
	return ""
}

func (x *PDUSEstAccModel) GetPdusessionID() int32 {
	if x != nil {
		return x.PdusessionID
	}
	return 0
}

func (x *PDUSEstAccModel) GetPti() int32 {
	if x != nil {
		return x.Pti
	}
	return 0
}

func (x *PDUSEstAccModel) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *PDUSEstAccModel) GetPdusType() string {
	if x != nil {
		return x.PdusType
	}
	return ""
}

func (x *PDUSEstAccModel) GetSscMode() string {
	if x != nil {
		return x.SscMode
	}
	return ""
}

func (x *PDUSEstAccModel) GetQosIEI() int32 {
	if x != nil {
		return x.QosIEI
	}
	return 0
}

func (x *PDUSEstAccModel) GetQosrules() []*QosRules {
	if x != nil {
		return x.Qosrules
	}
	return nil
}

func (x *PDUSEstAccModel) GetSessionambr() *Sessionambr {
	if x != nil {
		return x.Sessionambr
	}
	return nil
}

func (x *PDUSEstAccModel) GetSi6Lla() string {
	if x != nil {
		return x.Si6Lla
	}
	return ""
}

func (x *PDUSEstAccModel) GetPduSessionTypeVal() string {
	if x != nil {
		return x.PduSessionTypeVal
	}
	return ""
}

func (x *PDUSEstAccModel) GetPduAddrInfo() string {
	if x != nil {
		return x.PduAddrInfo
	}
	return ""
}

type ByteDataWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteArray []byte `protobuf:"bytes,1,opt,name=byteArray,proto3" json:"byteArray,omitempty"`
}

func (x *ByteDataWrapper) Reset() {
	*x = ByteDataWrapper{}
	mi := &file_grpcSmfNas_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByteDataWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteDataWrapper) ProtoMessage() {}

func (x *ByteDataWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteDataWrapper.ProtoReflect.Descriptor instead.
func (*ByteDataWrapper) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{14}
}

func (x *ByteDataWrapper) GetByteArray() []byte {
	if x != nil {
		return x.ByteArray
	}
	return nil
}

// Est Procedure Request structure
type EstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NasMessage *any1.Any `protobuf:"bytes,1,opt,name=nasMessage,proto3" json:"nasMessage,omitempty"`
	TypeReq    string    `protobuf:"bytes,2,opt,name=typeReq,proto3" json:"typeReq,omitempty"`
}

func (x *EstRequest) Reset() {
	*x = EstRequest{}
	mi := &file_grpcSmfNas_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstRequest) ProtoMessage() {}

func (x *EstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstRequest.ProtoReflect.Descriptor instead.
func (*EstRequest) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{15}
}

func (x *EstRequest) GetNasMessage() *any1.Any {
	if x != nil {
		return x.NasMessage
	}
	return nil
}

func (x *EstRequest) GetTypeReq() string {
	if x != nil {
		return x.TypeReq
	}
	return ""
}

// Est Procedure Response structure
type EstResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NasResponse *any1.Any `protobuf:"bytes,1,opt,name=nasResponse,proto3" json:"nasResponse,omitempty"`
	Error       string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EstResponse) Reset() {
	*x = EstResponse{}
	mi := &file_grpcSmfNas_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstResponse) ProtoMessage() {}

func (x *EstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcSmfNas_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstResponse.ProtoReflect.Descriptor instead.
func (*EstResponse) Descriptor() ([]byte, []int) {
	return file_grpcSmfNas_proto_rawDescGZIP(), []int{16}
}

func (x *EstResponse) GetNasResponse() *any1.Any {
	if x != nil {
		return x.NasResponse
	}
	return nil
}

func (x *EstResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_grpcSmfNas_proto protoreflect.FileDescriptor

var file_grpcSmfNas_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x50, 0x44,
	0x55, 0x53, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x64, 0x12,
	0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x74, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x70, 0x74, 0x69, 0x88, 0x01, 0x01, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22, 0xb0, 0x01, 0x0a,
	0x0f, 0x50, 0x44, 0x55, 0x53, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x6a, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x70, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70,
	0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x70, 0x74, 0x69, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22,
	0xb4, 0x01, 0x0a, 0x13, 0x50, 0x44, 0x55, 0x53, 0x52, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x03, 0x70, 0x74, 0x69, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22, 0xb5, 0x01, 0x0a, 0x14, 0x50, 0x44, 0x55, 0x53, 0x52,
	0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70,
	0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x74,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x70, 0x74, 0x69, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22, 0x8d,
	0x01, 0x0a, 0x0f, 0x50, 0x44, 0x55, 0x53, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x6a, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x70, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0x96,
	0x01, 0x0a, 0x0f, 0x50, 0x44, 0x55, 0x53, 0x4d, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x70, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x64,
	0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x70, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x70, 0x74,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22, 0x5c, 0x0a, 0x0c, 0x55, 0x70, 0x52, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x6e, 0x61, 0x73, 0x52, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x6e, 0x61, 0x73, 0x52,
	0x65, 0x6c, 0x4d, 0x73, 0x67, 0x22, 0x76, 0x0a, 0x0c, 0x55, 0x70, 0x52, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x0b, 0x6e, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd6, 0x01,
	0x0a, 0x0f, 0x50, 0x44, 0x55, 0x53, 0x45, 0x73, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x70, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x64, 0x75,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x70, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x70, 0x74, 0x69,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x72, 0x61, 0x74, 0x65, 0x55, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x72, 0x61, 0x74, 0x65, 0x55, 0x4c, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x72, 0x61, 0x74, 0x65, 0x44, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x72, 0x61, 0x74, 0x65, 0x44, 0x4c, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x70, 0x74, 0x69, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x50, 0x44, 0x55, 0x53, 0x45,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x70,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x74, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x71, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x71, 0x72, 0x12, 0x29, 0x0a, 0x02, 0x70, 0x66, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61,
	0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x02, 0x70, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x65, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x66, 0x69, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x71, 0x66, 0x69, 0x22, 0x7f, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x61, 0x6d, 0x62, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x65, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x65, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x55, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x55, 0x4c,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x65, 0x55, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x65, 0x55, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x44, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x44, 0x4c,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x65, 0x44, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x65, 0x44, 0x4c, 0x22, 0x96, 0x03, 0x0a, 0x0f, 0x50, 0x44, 0x55,
	0x53, 0x45, 0x73, 0x74, 0x41, 0x63, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x70, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x70, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x74, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x64, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x64, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x73,
	0x63, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x73, 0x63,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x6f, 0x73, 0x49, 0x45, 0x49, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x71, 0x6f, 0x73, 0x49, 0x45, 0x49, 0x12, 0x30, 0x0a, 0x08,
	0x71, 0x6f, 0x73, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6d, 0x62, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6d, 0x62, 0x72, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6d, 0x62, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x36,
	0x6c, 0x6c, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x69, 0x36, 0x6c, 0x6c,
	0x61, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x56, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x50, 0x64,
	0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x56, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x64, 0x75, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x64, 0x75, 0x41, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2f, 0x0a, 0x0f, 0x42, 0x79, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x22, 0x5c, 0x0a, 0x0a, 0x45, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x0a, 0x6e, 0x61, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x6e, 0x61, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x5b, 0x0a, 0x0b, 0x45, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x6e, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x9b, 0x01,
	0x0a, 0x06, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x2e, 0x45, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d,
	0x66, 0x4e, 0x61, 0x73, 0x2e, 0x45, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d,
	0x66, 0x4e, 0x61, 0x73, 0x2e, 0x55, 0x70, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x53, 0x6d, 0x66, 0x4e, 0x61, 0x73, 0x2e, 0x55,
	0x70, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcSmfNas_proto_rawDescOnce sync.Once
	file_grpcSmfNas_proto_rawDescData = file_grpcSmfNas_proto_rawDesc
)

func file_grpcSmfNas_proto_rawDescGZIP() []byte {
	file_grpcSmfNas_proto_rawDescOnce.Do(func() {
		file_grpcSmfNas_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcSmfNas_proto_rawDescData)
	})
	return file_grpcSmfNas_proto_rawDescData
}

var file_grpcSmfNas_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_grpcSmfNas_proto_goTypes = []any{
	(*PDUSRelReqModel)(nil),      // 0: grpcSmfNas.PDUSRelReqModel
	(*PDUSRelRejModel)(nil),      // 1: grpcSmfNas.PDUSRelRejModel
	(*PDUSRelCommandModel)(nil),  // 2: grpcSmfNas.PDUSRelCommandModel
	(*PDUSRelCompleteModel)(nil), // 3: grpcSmfNas.PDUSRelCompleteModel
	(*PDUSModRejModel)(nil),      // 4: grpcSmfNas.PDUSModRejModel
	(*PDUSModReqModel)(nil),      // 5: grpcSmfNas.PDUSModReqModel
	(*UpRelRequest)(nil),         // 6: grpcSmfNas.UpRelRequest
	(*UpRelRespone)(nil),         // 7: grpcSmfNas.UpRelRespone
	(*PDUSEstReqModel)(nil),      // 8: grpcSmfNas.PDUSEstReqModel
	(*PDUSEstRejModel)(nil),      // 9: grpcSmfNas.PDUSEstRejModel
	(*PacketFilters)(nil),        // 10: grpcSmfNas.PacketFilters
	(*QosRules)(nil),             // 11: grpcSmfNas.QosRules
	(*Sessionambr)(nil),          // 12: grpcSmfNas.Sessionambr
	(*PDUSEstAccModel)(nil),      // 13: grpcSmfNas.PDUSEstAccModel
	(*ByteDataWrapper)(nil),      // 14: grpcSmfNas.ByteDataWrapper
	(*EstRequest)(nil),           // 15: grpcSmfNas.EstRequest
	(*EstResponse)(nil),          // 16: grpcSmfNas.EstResponse
	(*any1.Any)(nil),             // 17: google.protobuf.Any
}
var file_grpcSmfNas_proto_depIdxs = []int32{
	17, // 0: grpcSmfNas.UpRelRequest.nasRelMsg:type_name -> google.protobuf.Any
	17, // 1: grpcSmfNas.UpRelRespone.nasResponse:type_name -> google.protobuf.Any
	10, // 2: grpcSmfNas.QosRules.pf:type_name -> grpcSmfNas.PacketFilters
	11, // 3: grpcSmfNas.PDUSEstAccModel.qosrules:type_name -> grpcSmfNas.QosRules
	12, // 4: grpcSmfNas.PDUSEstAccModel.sessionambr:type_name -> grpcSmfNas.Sessionambr
	17, // 5: grpcSmfNas.EstRequest.nasMessage:type_name -> google.protobuf.Any
	17, // 6: grpcSmfNas.EstResponse.nasResponse:type_name -> google.protobuf.Any
	15, // 7: grpcSmfNas.SmfNas.HandleEstablishment:input_type -> grpcSmfNas.EstRequest
	6,  // 8: grpcSmfNas.SmfNas.HandleUpdateRelease:input_type -> grpcSmfNas.UpRelRequest
	16, // 9: grpcSmfNas.SmfNas.HandleEstablishment:output_type -> grpcSmfNas.EstResponse
	7,  // 10: grpcSmfNas.SmfNas.HandleUpdateRelease:output_type -> grpcSmfNas.UpRelRespone
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_grpcSmfNas_proto_init() }
func file_grpcSmfNas_proto_init() {
	if File_grpcSmfNas_proto != nil {
		return
	}
	file_grpcSmfNas_proto_msgTypes[0].OneofWrappers = []any{}
	file_grpcSmfNas_proto_msgTypes[1].OneofWrappers = []any{}
	file_grpcSmfNas_proto_msgTypes[2].OneofWrappers = []any{}
	file_grpcSmfNas_proto_msgTypes[3].OneofWrappers = []any{}
	file_grpcSmfNas_proto_msgTypes[5].OneofWrappers = []any{}
	file_grpcSmfNas_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcSmfNas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpcSmfNas_proto_goTypes,
		DependencyIndexes: file_grpcSmfNas_proto_depIdxs,
		MessageInfos:      file_grpcSmfNas_proto_msgTypes,
	}.Build()
	File_grpcSmfNas_proto = out.File
	file_grpcSmfNas_proto_rawDesc = nil
	file_grpcSmfNas_proto_goTypes = nil
	file_grpcSmfNas_proto_depIdxs = nil
}
