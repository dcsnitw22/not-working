// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: sm_context.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmContextCreateDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Supi                string       `protobuf:"bytes,1,opt,name=supi,proto3" json:"supi,omitempty"`
	UnauthenticatedSupi bool         `protobuf:"varint,2,opt,name=unauthenticated_supi,json=unauthenticatedSupi,proto3" json:"unauthenticated_supi,omitempty"`
	Pei                 string       `protobuf:"bytes,3,opt,name=pei,proto3" json:"pei,omitempty"`
	Gpsi                string       `protobuf:"bytes,4,opt,name=gpsi,proto3" json:"gpsi,omitempty"`
	PduSessionId        int32        `protobuf:"varint,5,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
	Dnn                 string       `protobuf:"bytes,6,opt,name=dnn,proto3" json:"dnn,omitempty"`
	ServingNfId         string       `protobuf:"bytes,7,opt,name=serving_nf_id,json=servingNfId,proto3" json:"serving_nf_id,omitempty"`
	Guami               *Guami       `protobuf:"bytes,8,opt,name=guami,proto3" json:"guami,omitempty"`                                          // Guami type DONE
	ServiceName         string       `protobuf:"bytes,9,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`           // ServiceName type STRING DONE
	ServingNetwork      *PlmnId      `protobuf:"bytes,10,opt,name=serving_network,json=servingNetwork,proto3" json:"serving_network,omitempty"` // PlmnId type DONE
	RequestType         string       `protobuf:"bytes,11,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`          // RequestType type STRING DONE
	N1SmMessage         *N1SmMessage `protobuf:"bytes,12,opt,name=n1_sm_message,json=n1SmMessage,proto3" json:"n1_sm_message,omitempty"`
	AnType              string       `protobuf:"bytes,13,opt,name=an_type,json=anType,proto3" json:"an_type,omitempty"`    // AccessType type STRING DONE
	RatType             string       `protobuf:"bytes,14,opt,name=rat_type,json=ratType,proto3" json:"rat_type,omitempty"` // RatType type STRING DONE
	SmContextStatusUri  string       `protobuf:"bytes,15,opt,name=sm_context_status_uri,json=smContextStatusUri,proto3" json:"sm_context_status_uri,omitempty"`
}

func (x *SmContextCreateDataRequest) Reset() {
	*x = SmContextCreateDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextCreateDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextCreateDataRequest) ProtoMessage() {}

func (x *SmContextCreateDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextCreateDataRequest.ProtoReflect.Descriptor instead.
func (*SmContextCreateDataRequest) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{0}
}

func (x *SmContextCreateDataRequest) GetSupi() string {
	if x != nil {
		return x.Supi
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetUnauthenticatedSupi() bool {
	if x != nil {
		return x.UnauthenticatedSupi
	}
	return false
}

func (x *SmContextCreateDataRequest) GetPei() string {
	if x != nil {
		return x.Pei
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetGpsi() string {
	if x != nil {
		return x.Gpsi
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

func (x *SmContextCreateDataRequest) GetDnn() string {
	if x != nil {
		return x.Dnn
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetServingNfId() string {
	if x != nil {
		return x.ServingNfId
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *SmContextCreateDataRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetServingNetwork() *PlmnId {
	if x != nil {
		return x.ServingNetwork
	}
	return nil
}

func (x *SmContextCreateDataRequest) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetN1SmMessage() *N1SmMessage {
	if x != nil {
		return x.N1SmMessage
	}
	return nil
}

func (x *SmContextCreateDataRequest) GetAnType() string {
	if x != nil {
		return x.AnType
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetRatType() string {
	if x != nil {
		return x.RatType
	}
	return ""
}

func (x *SmContextCreateDataRequest) GetSmContextStatusUri() string {
	if x != nil {
		return x.SmContextStatusUri
	}
	return ""
}

type N1SmMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionEstablishmentRequest *PduSessionEstablishmentRequest `protobuf:"bytes,1,opt,name=pdu_session_establishment_request,json=pduSessionEstablishmentRequest,proto3" json:"pdu_session_establishment_request,omitempty"`
}

func (x *N1SmMessage) Reset() {
	*x = N1SmMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N1SmMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N1SmMessage) ProtoMessage() {}

func (x *N1SmMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N1SmMessage.ProtoReflect.Descriptor instead.
func (*N1SmMessage) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{1}
}

func (x *N1SmMessage) GetPduSessionEstablishmentRequest() *PduSessionEstablishmentRequest {
	if x != nil {
		return x.PduSessionEstablishmentRequest
	}
	return nil
}

type PduSessionEstablishmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionId   int32  `protobuf:"varint,1,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
	PduSessionType string `protobuf:"bytes,2,opt,name=pdu_session_type,json=pduSessionType,proto3" json:"pdu_session_type,omitempty"`
	SscMode        int32  `protobuf:"varint,3,opt,name=ssc_mode,json=sscMode,proto3" json:"ssc_mode,omitempty"`
}

func (x *PduSessionEstablishmentRequest) Reset() {
	*x = PduSessionEstablishmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PduSessionEstablishmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PduSessionEstablishmentRequest) ProtoMessage() {}

func (x *PduSessionEstablishmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PduSessionEstablishmentRequest.ProtoReflect.Descriptor instead.
func (*PduSessionEstablishmentRequest) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{2}
}

func (x *PduSessionEstablishmentRequest) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

func (x *PduSessionEstablishmentRequest) GetPduSessionType() string {
	if x != nil {
		return x.PduSessionType
	}
	return ""
}

func (x *PduSessionEstablishmentRequest) GetSscMode() int32 {
	if x != nil {
		return x.SscMode
	}
	return 0
}

type Guami struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *PlmnId `protobuf:"bytes,1,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	AmfId  string  `protobuf:"bytes,2,opt,name=amf_id,json=amfId,proto3" json:"amf_id,omitempty"`
}

func (x *Guami) Reset() {
	*x = Guami{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guami) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guami) ProtoMessage() {}

func (x *Guami) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guami.ProtoReflect.Descriptor instead.
func (*Guami) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{3}
}

func (x *Guami) GetPlmnId() *PlmnId {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *Guami) GetAmfId() string {
	if x != nil {
		return x.AmfId
	}
	return ""
}

type PlmnId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mcc string `protobuf:"bytes,1,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Mnc string `protobuf:"bytes,2,opt,name=mnc,proto3" json:"mnc,omitempty"`
}

func (x *PlmnId) Reset() {
	*x = PlmnId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnId) ProtoMessage() {}

func (x *PlmnId) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnId.ProtoReflect.Descriptor instead.
func (*PlmnId) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{4}
}

func (x *PlmnId) GetMcc() string {
	if x != nil {
		return x.Mcc
	}
	return ""
}

func (x *PlmnId) GetMnc() string {
	if x != nil {
		return x.Mnc
	}
	return ""
}

type SmContextCreateDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionId int32 `protobuf:"varint,1,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
}

func (x *SmContextCreateDataResponse) Reset() {
	*x = SmContextCreateDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextCreateDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextCreateDataResponse) ProtoMessage() {}

func (x *SmContextCreateDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextCreateDataResponse.ProtoReflect.Descriptor instead.
func (*SmContextCreateDataResponse) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{5}
}

func (x *SmContextCreateDataResponse) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

type SmContextUpdateDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pei                string           `protobuf:"bytes,1,opt,name=pei,proto3" json:"pei,omitempty"`
	ServingNfId        string           `protobuf:"bytes,2,opt,name=serving_nf_id,json=servingNfId,proto3" json:"serving_nf_id,omitempty"`
	SmContextStatusUri string           `protobuf:"bytes,3,opt,name=sm_context_status_uri,json=smContextStatusUri,proto3" json:"sm_context_status_uri,omitempty"`
	Guami              *Guami           `protobuf:"bytes,4,opt,name=guami,proto3" json:"guami,omitempty"`
	ServingNetwork     *PlmnId          `protobuf:"bytes,5,opt,name=serving_network,json=servingNetwork,proto3" json:"serving_network,omitempty"` // PlmnId type DONE
	PduSessionId       int32            `protobuf:"varint,6,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
	N2SmInfo           *N2SmInformation `protobuf:"bytes,7,opt,name=n2_sm_info,json=n2SmInfo,proto3" json:"n2_sm_info,omitempty"`
}

func (x *SmContextUpdateDataRequest) Reset() {
	*x = SmContextUpdateDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextUpdateDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextUpdateDataRequest) ProtoMessage() {}

func (x *SmContextUpdateDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextUpdateDataRequest.ProtoReflect.Descriptor instead.
func (*SmContextUpdateDataRequest) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{6}
}

func (x *SmContextUpdateDataRequest) GetPei() string {
	if x != nil {
		return x.Pei
	}
	return ""
}

func (x *SmContextUpdateDataRequest) GetServingNfId() string {
	if x != nil {
		return x.ServingNfId
	}
	return ""
}

func (x *SmContextUpdateDataRequest) GetSmContextStatusUri() string {
	if x != nil {
		return x.SmContextStatusUri
	}
	return ""
}

func (x *SmContextUpdateDataRequest) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *SmContextUpdateDataRequest) GetServingNetwork() *PlmnId {
	if x != nil {
		return x.ServingNetwork
	}
	return nil
}

func (x *SmContextUpdateDataRequest) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

func (x *SmContextUpdateDataRequest) GetN2SmInfo() *N2SmInformation {
	if x != nil {
		return x.N2SmInfo
	}
	return nil
}

type N2SmInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionResourceSetupRequestTransfer *PduSessionResourceSetupRequestTransfer `protobuf:"bytes,1,opt,name=pdu_session_resource_setup_request_transfer,json=pduSessionResourceSetupRequestTransfer,proto3" json:"pdu_session_resource_setup_request_transfer,omitempty"`
}

func (x *N2SmInformation) Reset() {
	*x = N2SmInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *N2SmInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N2SmInformation) ProtoMessage() {}

func (x *N2SmInformation) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N2SmInformation.ProtoReflect.Descriptor instead.
func (*N2SmInformation) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{7}
}

func (x *N2SmInformation) GetPduSessionResourceSetupRequestTransfer() *PduSessionResourceSetupRequestTransfer {
	if x != nil {
		return x.PduSessionResourceSetupRequestTransfer
	}
	return nil
}

type PduSessionResourceSetupRequestTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GtpTunnelEndpointIpAddress string                     `protobuf:"bytes,1,opt,name=gtp_tunnel_endpoint_ip_address,json=gtpTunnelEndpointIpAddress,proto3" json:"gtp_tunnel_endpoint_ip_address,omitempty"`
	GtpTeid                    string                     `protobuf:"bytes,2,opt,name=gtp_teid,json=gtpTeid,proto3" json:"gtp_teid,omitempty"`
	PduSessionType             string                     `protobuf:"bytes,3,opt,name=pdu_session_type,json=pduSessionType,proto3" json:"pdu_session_type,omitempty"`
	Qfi                        int32                      `protobuf:"varint,4,opt,name=qfi,proto3" json:"qfi,omitempty"`
	QosFlowLevelQosParameters  *QosFlowLevelQosParameters `protobuf:"bytes,5,opt,name=qos_flow_level_qos_parameters,json=qosFlowLevelQosParameters,proto3" json:"qos_flow_level_qos_parameters,omitempty"`
}

func (x *PduSessionResourceSetupRequestTransfer) Reset() {
	*x = PduSessionResourceSetupRequestTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PduSessionResourceSetupRequestTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PduSessionResourceSetupRequestTransfer) ProtoMessage() {}

func (x *PduSessionResourceSetupRequestTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PduSessionResourceSetupRequestTransfer.ProtoReflect.Descriptor instead.
func (*PduSessionResourceSetupRequestTransfer) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{8}
}

func (x *PduSessionResourceSetupRequestTransfer) GetGtpTunnelEndpointIpAddress() string {
	if x != nil {
		return x.GtpTunnelEndpointIpAddress
	}
	return ""
}

func (x *PduSessionResourceSetupRequestTransfer) GetGtpTeid() string {
	if x != nil {
		return x.GtpTeid
	}
	return ""
}

func (x *PduSessionResourceSetupRequestTransfer) GetPduSessionType() string {
	if x != nil {
		return x.PduSessionType
	}
	return ""
}

func (x *PduSessionResourceSetupRequestTransfer) GetQfi() int32 {
	if x != nil {
		return x.Qfi
	}
	return 0
}

func (x *PduSessionResourceSetupRequestTransfer) GetQosFlowLevelQosParameters() *QosFlowLevelQosParameters {
	if x != nil {
		return x.QosFlowLevelQosParameters
	}
	return nil
}

type QosFlowLevelQosParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqi                   int32                  `protobuf:"varint,1,opt,name=fqi,proto3" json:"fqi,omitempty"`
	Arp                   *Arp                   `protobuf:"bytes,2,opt,name=arp,proto3" json:"arp,omitempty"`
	GbrQosFlowInformation *GbrQoSFlowInformation `protobuf:"bytes,3,opt,name=gbr_qos_flow_information,json=gbrQosFlowInformation,proto3" json:"gbr_qos_flow_information,omitempty"`
}

func (x *QosFlowLevelQosParameters) Reset() {
	*x = QosFlowLevelQosParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosFlowLevelQosParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosFlowLevelQosParameters) ProtoMessage() {}

func (x *QosFlowLevelQosParameters) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosFlowLevelQosParameters.ProtoReflect.Descriptor instead.
func (*QosFlowLevelQosParameters) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{9}
}

func (x *QosFlowLevelQosParameters) GetFqi() int32 {
	if x != nil {
		return x.Fqi
	}
	return 0
}

func (x *QosFlowLevelQosParameters) GetArp() *Arp {
	if x != nil {
		return x.Arp
	}
	return nil
}

func (x *QosFlowLevelQosParameters) GetGbrQosFlowInformation() *GbrQoSFlowInformation {
	if x != nil {
		return x.GbrQosFlowInformation
	}
	return nil
}

type Arp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriorityLevel           string `protobuf:"bytes,1,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    string `protobuf:"bytes,2,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability string `protobuf:"bytes,3,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
}

func (x *Arp) Reset() {
	*x = Arp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arp) ProtoMessage() {}

func (x *Arp) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arp.ProtoReflect.Descriptor instead.
func (*Arp) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{10}
}

func (x *Arp) GetPriorityLevel() string {
	if x != nil {
		return x.PriorityLevel
	}
	return ""
}

func (x *Arp) GetPreemptionCapability() string {
	if x != nil {
		return x.PreemptionCapability
	}
	return ""
}

func (x *Arp) GetPreemptionVulnerability() string {
	if x != nil {
		return x.PreemptionVulnerability
	}
	return ""
}

type GbrQoSFlowInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaximumFlowBitrateDownlink    int32 `protobuf:"varint,1,opt,name=maximum_flow_bitrate_downlink,json=maximumFlowBitrateDownlink,proto3" json:"maximum_flow_bitrate_downlink,omitempty"`
	MaximumFlowBitrateUplink      int32 `protobuf:"varint,2,opt,name=maximum_flow_bitrate_uplink,json=maximumFlowBitrateUplink,proto3" json:"maximum_flow_bitrate_uplink,omitempty"`
	GuaranteedFlowBitrateDownlink int32 `protobuf:"varint,3,opt,name=guaranteed_flow_bitrate_downlink,json=guaranteedFlowBitrateDownlink,proto3" json:"guaranteed_flow_bitrate_downlink,omitempty"`
	GuaranteedFlowBitrateUplink   int32 `protobuf:"varint,4,opt,name=guaranteed_flow_bitrate_uplink,json=guaranteedFlowBitrateUplink,proto3" json:"guaranteed_flow_bitrate_uplink,omitempty"`
}

func (x *GbrQoSFlowInformation) Reset() {
	*x = GbrQoSFlowInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GbrQoSFlowInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GbrQoSFlowInformation) ProtoMessage() {}

func (x *GbrQoSFlowInformation) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GbrQoSFlowInformation.ProtoReflect.Descriptor instead.
func (*GbrQoSFlowInformation) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{11}
}

func (x *GbrQoSFlowInformation) GetMaximumFlowBitrateDownlink() int32 {
	if x != nil {
		return x.MaximumFlowBitrateDownlink
	}
	return 0
}

func (x *GbrQoSFlowInformation) GetMaximumFlowBitrateUplink() int32 {
	if x != nil {
		return x.MaximumFlowBitrateUplink
	}
	return 0
}

func (x *GbrQoSFlowInformation) GetGuaranteedFlowBitrateDownlink() int32 {
	if x != nil {
		return x.GuaranteedFlowBitrateDownlink
	}
	return 0
}

func (x *GbrQoSFlowInformation) GetGuaranteedFlowBitrateUplink() int32 {
	if x != nil {
		return x.GuaranteedFlowBitrateUplink
	}
	return 0
}

type SmContextUpdateDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionId int32 `protobuf:"varint,1,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
}

func (x *SmContextUpdateDataResponse) Reset() {
	*x = SmContextUpdateDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextUpdateDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextUpdateDataResponse) ProtoMessage() {}

func (x *SmContextUpdateDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextUpdateDataResponse.ProtoReflect.Descriptor instead.
func (*SmContextUpdateDataResponse) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{12}
}

func (x *SmContextUpdateDataResponse) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

type SmContextReleaseDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pei                                     string  `protobuf:"bytes,1,opt,name=pei,proto3" json:"pei,omitempty"`
	ServingNfId                             string  `protobuf:"bytes,2,opt,name=serving_nf_id,json=servingNfId,proto3" json:"serving_nf_id,omitempty"`
	SmContextStatusUri                      string  `protobuf:"bytes,3,opt,name=sm_context_status_uri,json=smContextStatusUri,proto3" json:"sm_context_status_uri,omitempty"`
	Guami                                   *Guami  `protobuf:"bytes,4,opt,name=guami,proto3" json:"guami,omitempty"`
	ServingNetwork                          *PlmnId `protobuf:"bytes,5,opt,name=serving_network,json=servingNetwork,proto3" json:"serving_network,omitempty"` // PlmnId type DONE
	PduSessionId                            int32   `protobuf:"varint,6,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
	ExtendedProtocalDiscriminator           int32   `protobuf:"varint,7,opt,name=extended_protocal_discriminator,json=extendedProtocalDiscriminator,proto3" json:"extended_protocal_discriminator,omitempty"`
	Pti                                     int32   `protobuf:"varint,8,opt,name=pti,proto3" json:"pti,omitempty"`
	PduSessionReleaseRequestMessageIdentity int32   `protobuf:"varint,9,opt,name=pdu_session_release_request_message_identity,json=pduSessionReleaseRequestMessageIdentity,proto3" json:"pdu_session_release_request_message_identity,omitempty"`
}

func (x *SmContextReleaseDataRequest) Reset() {
	*x = SmContextReleaseDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextReleaseDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextReleaseDataRequest) ProtoMessage() {}

func (x *SmContextReleaseDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextReleaseDataRequest.ProtoReflect.Descriptor instead.
func (*SmContextReleaseDataRequest) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{13}
}

func (x *SmContextReleaseDataRequest) GetPei() string {
	if x != nil {
		return x.Pei
	}
	return ""
}

func (x *SmContextReleaseDataRequest) GetServingNfId() string {
	if x != nil {
		return x.ServingNfId
	}
	return ""
}

func (x *SmContextReleaseDataRequest) GetSmContextStatusUri() string {
	if x != nil {
		return x.SmContextStatusUri
	}
	return ""
}

func (x *SmContextReleaseDataRequest) GetGuami() *Guami {
	if x != nil {
		return x.Guami
	}
	return nil
}

func (x *SmContextReleaseDataRequest) GetServingNetwork() *PlmnId {
	if x != nil {
		return x.ServingNetwork
	}
	return nil
}

func (x *SmContextReleaseDataRequest) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

func (x *SmContextReleaseDataRequest) GetExtendedProtocalDiscriminator() int32 {
	if x != nil {
		return x.ExtendedProtocalDiscriminator
	}
	return 0
}

func (x *SmContextReleaseDataRequest) GetPti() int32 {
	if x != nil {
		return x.Pti
	}
	return 0
}

func (x *SmContextReleaseDataRequest) GetPduSessionReleaseRequestMessageIdentity() int32 {
	if x != nil {
		return x.PduSessionReleaseRequestMessageIdentity
	}
	return 0
}

type SmContextReleaseDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PduSessionId int32 `protobuf:"varint,1,opt,name=pdu_session_id,json=pduSessionId,proto3" json:"pdu_session_id,omitempty"`
}

func (x *SmContextReleaseDataResponse) Reset() {
	*x = SmContextReleaseDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sm_context_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmContextReleaseDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmContextReleaseDataResponse) ProtoMessage() {}

func (x *SmContextReleaseDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sm_context_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmContextReleaseDataResponse.ProtoReflect.Descriptor instead.
func (*SmContextReleaseDataResponse) Descriptor() ([]byte, []int) {
	return file_sm_context_proto_rawDescGZIP(), []int{14}
}

func (x *SmContextReleaseDataResponse) GetPduSessionId() int32 {
	if x != nil {
		return x.PduSessionId
	}
	return 0
}

var File_sm_context_proto protoreflect.FileDescriptor

var file_sm_context_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0xa3, 0x04, 0x0a, 0x1a, 0x53, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x75, 0x70, 0x69, 0x12, 0x31, 0x0a, 0x14, 0x75,
	0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x75, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x6e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x70, 0x69, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x65, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x65, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x70, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x70, 0x73, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64,
	0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6e, 0x6e, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x66, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75,
	0x61, 0x6d, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x35, 0x0a, 0x0d, 0x6e, 0x31, 0x5f, 0x73, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e,
	0x31, 0x53, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6e, 0x31, 0x53, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x73,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x69, 0x22, 0x7e,
	0x0a, 0x0b, 0x4e, 0x31, 0x53, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6f, 0x0a,
	0x21, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1e,
	0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x1e, 0x50, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x64, 0x75, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x73, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x73, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x05,
	0x47, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c,
	0x6d, 0x6e, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x6d, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6d,
	0x66, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x06, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6e,
	0x63, 0x22, 0x43, 0x0a, 0x1b, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xba, 0x02, 0x0a, 0x1a, 0x53, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x65, 0x69, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x66, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x73,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x69, 0x12, 0x21,
	0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x75, 0x61, 0x6d, 0x69, 0x52, 0x05, 0x67, 0x75, 0x61, 0x6d,
	0x69, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x0a, 0x6e, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x32, 0x53, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6e, 0x32, 0x53, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4e, 0x32, 0x53, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x89, 0x01, 0x0a, 0x2b, 0x70, 0x64, 0x75, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x26, 0x70, 0x64, 0x75,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x22, 0xa6, 0x02, 0x0a, 0x26, 0x50, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x42,
	0x0a, 0x1e, 0x67, 0x74, 0x70, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x67, 0x74, 0x70, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x74, 0x70, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x74, 0x70, 0x54, 0x65, 0x69, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x66, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x66, 0x69, 0x12, 0x61, 0x0a, 0x1d, 0x71, 0x6f, 0x73,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x71, 0x6f, 0x73, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x51, 0x6f, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x51,
	0x6f, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xa0, 0x01, 0x0a,
	0x19, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x51, 0x6f, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x71,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x71, 0x69, 0x12, 0x1b, 0x0a, 0x03,
	0x61, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x72, 0x70, 0x52, 0x03, 0x61, 0x72, 0x70, 0x12, 0x54, 0x0a, 0x18, 0x67, 0x62, 0x72,
	0x5f, 0x71, 0x6f, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x62, 0x72, 0x51, 0x6f, 0x53, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x67, 0x62, 0x72, 0x51, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x9c, 0x01, 0x0a, 0x03, 0x41, 0x72, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33,
	0x0a, 0x15, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xa7,
	0x02, 0x0a, 0x15, 0x47, 0x62, 0x72, 0x51, 0x6f, 0x53, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1a, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x1b, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x47, 0x0a, 0x20, 0x67, 0x75,
	0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64,
	0x46, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x43, 0x0a, 0x1e, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65,
	0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x67, 0x75, 0x61,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x43, 0x0a, 0x1b, 0x53, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbf, 0x03,
	0x0a, 0x1b, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x65, 0x69, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e,
	0x66, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x55, 0x72, 0x69, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x75, 0x61,
	0x6d, 0x69, 0x52, 0x05, 0x67, 0x75, 0x61, 0x6d, 0x69, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64,
	0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x1f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x74, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x69,
	0x12, 0x5d, 0x0a, 0x2c, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x27, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x44, 0x0a, 0x1c, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x64, 0x75, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x64, 0x75, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xbc, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x17, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x17, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sm_context_proto_rawDescOnce sync.Once
	file_sm_context_proto_rawDescData = file_sm_context_proto_rawDesc
)

func file_sm_context_proto_rawDescGZIP() []byte {
	file_sm_context_proto_rawDescOnce.Do(func() {
		file_sm_context_proto_rawDescData = protoimpl.X.CompressGZIP(file_sm_context_proto_rawDescData)
	})
	return file_sm_context_proto_rawDescData
}

var file_sm_context_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_sm_context_proto_goTypes = []interface{}{
	(*SmContextCreateDataRequest)(nil),             // 0: grpc.SmContextCreateDataRequest
	(*N1SmMessage)(nil),                            // 1: grpc.N1SmMessage
	(*PduSessionEstablishmentRequest)(nil),         // 2: grpc.PduSessionEstablishmentRequest
	(*Guami)(nil),                                  // 3: grpc.Guami
	(*PlmnId)(nil),                                 // 4: grpc.PlmnId
	(*SmContextCreateDataResponse)(nil),            // 5: grpc.SmContextCreateDataResponse
	(*SmContextUpdateDataRequest)(nil),             // 6: grpc.SmContextUpdateDataRequest
	(*N2SmInformation)(nil),                        // 7: grpc.N2SmInformation
	(*PduSessionResourceSetupRequestTransfer)(nil), // 8: grpc.PduSessionResourceSetupRequestTransfer
	(*QosFlowLevelQosParameters)(nil),              // 9: grpc.QosFlowLevelQosParameters
	(*Arp)(nil),                                    // 10: grpc.Arp
	(*GbrQoSFlowInformation)(nil),                  // 11: grpc.GbrQoSFlowInformation
	(*SmContextUpdateDataResponse)(nil),            // 12: grpc.SmContextUpdateDataResponse
	(*SmContextReleaseDataRequest)(nil),            // 13: grpc.SmContextReleaseDataRequest
	(*SmContextReleaseDataResponse)(nil),           // 14: grpc.SmContextReleaseDataResponse
}
var file_sm_context_proto_depIdxs = []int32{
	3,  // 0: grpc.SmContextCreateDataRequest.guami:type_name -> grpc.Guami
	4,  // 1: grpc.SmContextCreateDataRequest.serving_network:type_name -> grpc.PlmnId
	1,  // 2: grpc.SmContextCreateDataRequest.n1_sm_message:type_name -> grpc.N1SmMessage
	2,  // 3: grpc.N1SmMessage.pdu_session_establishment_request:type_name -> grpc.PduSessionEstablishmentRequest
	4,  // 4: grpc.Guami.plmn_id:type_name -> grpc.PlmnId
	3,  // 5: grpc.SmContextUpdateDataRequest.guami:type_name -> grpc.Guami
	4,  // 6: grpc.SmContextUpdateDataRequest.serving_network:type_name -> grpc.PlmnId
	7,  // 7: grpc.SmContextUpdateDataRequest.n2_sm_info:type_name -> grpc.N2SmInformation
	8,  // 8: grpc.N2SmInformation.pdu_session_resource_setup_request_transfer:type_name -> grpc.PduSessionResourceSetupRequestTransfer
	9,  // 9: grpc.PduSessionResourceSetupRequestTransfer.qos_flow_level_qos_parameters:type_name -> grpc.QosFlowLevelQosParameters
	10, // 10: grpc.QosFlowLevelQosParameters.arp:type_name -> grpc.Arp
	11, // 11: grpc.QosFlowLevelQosParameters.gbr_qos_flow_information:type_name -> grpc.GbrQoSFlowInformation
	3,  // 12: grpc.SmContextReleaseDataRequest.guami:type_name -> grpc.Guami
	4,  // 13: grpc.SmContextReleaseDataRequest.serving_network:type_name -> grpc.PlmnId
	0,  // 14: grpc.SendSmContextData.SendSmContextCreateData:input_type -> grpc.SmContextCreateDataRequest
	6,  // 15: grpc.SendSmContextData.SendSmContextUpdateData:input_type -> grpc.SmContextUpdateDataRequest
	13, // 16: grpc.SendSmContextData.SendSmContextReleaseData:input_type -> grpc.SmContextReleaseDataRequest
	5,  // 17: grpc.SendSmContextData.SendSmContextCreateData:output_type -> grpc.SmContextCreateDataResponse
	12, // 18: grpc.SendSmContextData.SendSmContextUpdateData:output_type -> grpc.SmContextUpdateDataResponse
	14, // 19: grpc.SendSmContextData.SendSmContextReleaseData:output_type -> grpc.SmContextReleaseDataResponse
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_sm_context_proto_init() }
func file_sm_context_proto_init() {
	if File_sm_context_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sm_context_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextCreateDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N1SmMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PduSessionEstablishmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guami); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextCreateDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextUpdateDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*N2SmInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PduSessionResourceSetupRequestTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosFlowLevelQosParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GbrQoSFlowInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextUpdateDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextReleaseDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sm_context_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmContextReleaseDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sm_context_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sm_context_proto_goTypes,
		DependencyIndexes: file_sm_context_proto_depIdxs,
		MessageInfos:      file_sm_context_proto_msgTypes,
	}.Build()
	File_sm_context_proto = out.File
	file_sm_context_proto_rawDesc = nil
	file_sm_context_proto_goTypes = nil
	file_sm_context_proto_depIdxs = nil
}
