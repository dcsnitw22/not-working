/*
Nsmf_PDUSession

SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// checks if the VsmfUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VsmfUpdateData{}

// VsmfUpdateData struct for VsmfUpdateData
type VsmfUpdateData struct {
	RequestIndication RequestIndication `json:"requestIndication"`
	SessionAmbr *Ambr `json:"sessionAmbr,omitempty"`
	QosFlowsAddModRequestList []QosFlowAddModifyRequestItem `json:"qosFlowsAddModRequestList,omitempty"`
	QosFlowsRelRequestList []QosFlowReleaseRequestItem `json:"qosFlowsRelRequestList,omitempty"`
	EpsBearerInfo []EpsBearerInfo `json:"epsBearerInfo,omitempty"`
	AssignEbiList []Arp `json:"assignEbiList,omitempty"`
	RevokeEbiList []int32 `json:"revokeEbiList,omitempty"`
	ModifiedEbiList []EbiArpMapping `json:"modifiedEbiList,omitempty"`
	Pti *int32 `json:"pti,omitempty"`
	N1SmInfoToUe *RefToBinaryData `json:"n1SmInfoToUe,omitempty"`
	AlwaysOnGranted *bool `json:"alwaysOnGranted,omitempty"`
	HsmfPduSessionUri *string `json:"hsmfPduSessionUri,omitempty"`
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	Cause *Cause `json:"cause,omitempty"`
	N1smCause *string `json:"n1smCause,omitempty"`
	BackOffTimer *int32 `json:"backOffTimer,omitempty"`
}

// NewVsmfUpdateData instantiates a new VsmfUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVsmfUpdateData(requestIndication RequestIndication) *VsmfUpdateData {
	this := VsmfUpdateData{}
	this.RequestIndication = requestIndication
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	return &this
}

// NewVsmfUpdateDataWithDefaults instantiates a new VsmfUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVsmfUpdateDataWithDefaults() *VsmfUpdateData {
	this := VsmfUpdateData{}
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	return &this
}

// GetRequestIndication returns the RequestIndication field value
func (o *VsmfUpdateData) GetRequestIndication() RequestIndication {
	if o == nil {
		var ret RequestIndication
		return ret
	}

	return o.RequestIndication
}

// GetRequestIndicationOk returns a tuple with the RequestIndication field value
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetRequestIndicationOk() (*RequestIndication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestIndication, true
}

// SetRequestIndication sets field value
func (o *VsmfUpdateData) SetRequestIndication(v RequestIndication) {
	o.RequestIndication = v
}

// GetSessionAmbr returns the SessionAmbr field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetSessionAmbr() Ambr {
	if o == nil || IsNil(o.SessionAmbr) {
		var ret Ambr
		return ret
	}
	return *o.SessionAmbr
}

// GetSessionAmbrOk returns a tuple with the SessionAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetSessionAmbrOk() (*Ambr, bool) {
	if o == nil || IsNil(o.SessionAmbr) {
		return nil, false
	}
	return o.SessionAmbr, true
}

// HasSessionAmbr returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasSessionAmbr() bool {
	if o != nil && !IsNil(o.SessionAmbr) {
		return true
	}

	return false
}

// SetSessionAmbr gets a reference to the given Ambr and assigns it to the SessionAmbr field.
func (o *VsmfUpdateData) SetSessionAmbr(v Ambr) {
	o.SessionAmbr = &v
}

// GetQosFlowsAddModRequestList returns the QosFlowsAddModRequestList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetQosFlowsAddModRequestList() []QosFlowAddModifyRequestItem {
	if o == nil || IsNil(o.QosFlowsAddModRequestList) {
		var ret []QosFlowAddModifyRequestItem
		return ret
	}
	return o.QosFlowsAddModRequestList
}

// GetQosFlowsAddModRequestListOk returns a tuple with the QosFlowsAddModRequestList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetQosFlowsAddModRequestListOk() ([]QosFlowAddModifyRequestItem, bool) {
	if o == nil || IsNil(o.QosFlowsAddModRequestList) {
		return nil, false
	}
	return o.QosFlowsAddModRequestList, true
}

// HasQosFlowsAddModRequestList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasQosFlowsAddModRequestList() bool {
	if o != nil && !IsNil(o.QosFlowsAddModRequestList) {
		return true
	}

	return false
}

// SetQosFlowsAddModRequestList gets a reference to the given []QosFlowAddModifyRequestItem and assigns it to the QosFlowsAddModRequestList field.
func (o *VsmfUpdateData) SetQosFlowsAddModRequestList(v []QosFlowAddModifyRequestItem) {
	o.QosFlowsAddModRequestList = v
}

// GetQosFlowsRelRequestList returns the QosFlowsRelRequestList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetQosFlowsRelRequestList() []QosFlowReleaseRequestItem {
	if o == nil || IsNil(o.QosFlowsRelRequestList) {
		var ret []QosFlowReleaseRequestItem
		return ret
	}
	return o.QosFlowsRelRequestList
}

// GetQosFlowsRelRequestListOk returns a tuple with the QosFlowsRelRequestList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetQosFlowsRelRequestListOk() ([]QosFlowReleaseRequestItem, bool) {
	if o == nil || IsNil(o.QosFlowsRelRequestList) {
		return nil, false
	}
	return o.QosFlowsRelRequestList, true
}

// HasQosFlowsRelRequestList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasQosFlowsRelRequestList() bool {
	if o != nil && !IsNil(o.QosFlowsRelRequestList) {
		return true
	}

	return false
}

// SetQosFlowsRelRequestList gets a reference to the given []QosFlowReleaseRequestItem and assigns it to the QosFlowsRelRequestList field.
func (o *VsmfUpdateData) SetQosFlowsRelRequestList(v []QosFlowReleaseRequestItem) {
	o.QosFlowsRelRequestList = v
}

// GetEpsBearerInfo returns the EpsBearerInfo field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetEpsBearerInfo() []EpsBearerInfo {
	if o == nil || IsNil(o.EpsBearerInfo) {
		var ret []EpsBearerInfo
		return ret
	}
	return o.EpsBearerInfo
}

// GetEpsBearerInfoOk returns a tuple with the EpsBearerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetEpsBearerInfoOk() ([]EpsBearerInfo, bool) {
	if o == nil || IsNil(o.EpsBearerInfo) {
		return nil, false
	}
	return o.EpsBearerInfo, true
}

// HasEpsBearerInfo returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasEpsBearerInfo() bool {
	if o != nil && !IsNil(o.EpsBearerInfo) {
		return true
	}

	return false
}

// SetEpsBearerInfo gets a reference to the given []EpsBearerInfo and assigns it to the EpsBearerInfo field.
func (o *VsmfUpdateData) SetEpsBearerInfo(v []EpsBearerInfo) {
	o.EpsBearerInfo = v
}

// GetAssignEbiList returns the AssignEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetAssignEbiList() []Arp {
	if o == nil || IsNil(o.AssignEbiList) {
		var ret []Arp
		return ret
	}
	return o.AssignEbiList
}

// GetAssignEbiListOk returns a tuple with the AssignEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetAssignEbiListOk() ([]Arp, bool) {
	if o == nil || IsNil(o.AssignEbiList) {
		return nil, false
	}
	return o.AssignEbiList, true
}

// HasAssignEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasAssignEbiList() bool {
	if o != nil && !IsNil(o.AssignEbiList) {
		return true
	}

	return false
}

// SetAssignEbiList gets a reference to the given []Arp and assigns it to the AssignEbiList field.
func (o *VsmfUpdateData) SetAssignEbiList(v []Arp) {
	o.AssignEbiList = v
}

// GetRevokeEbiList returns the RevokeEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetRevokeEbiList() []int32 {
	if o == nil || IsNil(o.RevokeEbiList) {
		var ret []int32
		return ret
	}
	return o.RevokeEbiList
}

// GetRevokeEbiListOk returns a tuple with the RevokeEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetRevokeEbiListOk() ([]int32, bool) {
	if o == nil || IsNil(o.RevokeEbiList) {
		return nil, false
	}
	return o.RevokeEbiList, true
}

// HasRevokeEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasRevokeEbiList() bool {
	if o != nil && !IsNil(o.RevokeEbiList) {
		return true
	}

	return false
}

// SetRevokeEbiList gets a reference to the given []int32 and assigns it to the RevokeEbiList field.
func (o *VsmfUpdateData) SetRevokeEbiList(v []int32) {
	o.RevokeEbiList = v
}

// GetModifiedEbiList returns the ModifiedEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetModifiedEbiList() []EbiArpMapping {
	if o == nil || IsNil(o.ModifiedEbiList) {
		var ret []EbiArpMapping
		return ret
	}
	return o.ModifiedEbiList
}

// GetModifiedEbiListOk returns a tuple with the ModifiedEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetModifiedEbiListOk() ([]EbiArpMapping, bool) {
	if o == nil || IsNil(o.ModifiedEbiList) {
		return nil, false
	}
	return o.ModifiedEbiList, true
}

// HasModifiedEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasModifiedEbiList() bool {
	if o != nil && !IsNil(o.ModifiedEbiList) {
		return true
	}

	return false
}

// SetModifiedEbiList gets a reference to the given []EbiArpMapping and assigns it to the ModifiedEbiList field.
func (o *VsmfUpdateData) SetModifiedEbiList(v []EbiArpMapping) {
	o.ModifiedEbiList = v
}

// GetPti returns the Pti field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetPti() int32 {
	if o == nil || IsNil(o.Pti) {
		var ret int32
		return ret
	}
	return *o.Pti
}

// GetPtiOk returns a tuple with the Pti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetPtiOk() (*int32, bool) {
	if o == nil || IsNil(o.Pti) {
		return nil, false
	}
	return o.Pti, true
}

// HasPti returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasPti() bool {
	if o != nil && !IsNil(o.Pti) {
		return true
	}

	return false
}

// SetPti gets a reference to the given int32 and assigns it to the Pti field.
func (o *VsmfUpdateData) SetPti(v int32) {
	o.Pti = &v
}

// GetN1SmInfoToUe returns the N1SmInfoToUe field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN1SmInfoToUe() RefToBinaryData {
	if o == nil || IsNil(o.N1SmInfoToUe) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N1SmInfoToUe
}

// GetN1SmInfoToUeOk returns a tuple with the N1SmInfoToUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN1SmInfoToUeOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N1SmInfoToUe) {
		return nil, false
	}
	return o.N1SmInfoToUe, true
}

// HasN1SmInfoToUe returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN1SmInfoToUe() bool {
	if o != nil && !IsNil(o.N1SmInfoToUe) {
		return true
	}

	return false
}

// SetN1SmInfoToUe gets a reference to the given RefToBinaryData and assigns it to the N1SmInfoToUe field.
func (o *VsmfUpdateData) SetN1SmInfoToUe(v RefToBinaryData) {
	o.N1SmInfoToUe = &v
}

// GetAlwaysOnGranted returns the AlwaysOnGranted field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetAlwaysOnGranted() bool {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		var ret bool
		return ret
	}
	return *o.AlwaysOnGranted
}

// GetAlwaysOnGrantedOk returns a tuple with the AlwaysOnGranted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetAlwaysOnGrantedOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		return nil, false
	}
	return o.AlwaysOnGranted, true
}

// HasAlwaysOnGranted returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasAlwaysOnGranted() bool {
	if o != nil && !IsNil(o.AlwaysOnGranted) {
		return true
	}

	return false
}

// SetAlwaysOnGranted gets a reference to the given bool and assigns it to the AlwaysOnGranted field.
func (o *VsmfUpdateData) SetAlwaysOnGranted(v bool) {
	o.AlwaysOnGranted = &v
}

// GetHsmfPduSessionUri returns the HsmfPduSessionUri field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetHsmfPduSessionUri() string {
	if o == nil || IsNil(o.HsmfPduSessionUri) {
		var ret string
		return ret
	}
	return *o.HsmfPduSessionUri
}

// GetHsmfPduSessionUriOk returns a tuple with the HsmfPduSessionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetHsmfPduSessionUriOk() (*string, bool) {
	if o == nil || IsNil(o.HsmfPduSessionUri) {
		return nil, false
	}
	return o.HsmfPduSessionUri, true
}

// HasHsmfPduSessionUri returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasHsmfPduSessionUri() bool {
	if o != nil && !IsNil(o.HsmfPduSessionUri) {
		return true
	}

	return false
}

// SetHsmfPduSessionUri gets a reference to the given string and assigns it to the HsmfPduSessionUri field.
func (o *VsmfUpdateData) SetHsmfPduSessionUri(v string) {
	o.HsmfPduSessionUri = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *VsmfUpdateData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetCause() Cause {
	if o == nil || IsNil(o.Cause) {
		var ret Cause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetCauseOk() (*Cause, bool) {
	if o == nil || IsNil(o.Cause) {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasCause() bool {
	if o != nil && !IsNil(o.Cause) {
		return true
	}

	return false
}

// SetCause gets a reference to the given Cause and assigns it to the Cause field.
func (o *VsmfUpdateData) SetCause(v Cause) {
	o.Cause = &v
}

// GetN1smCause returns the N1smCause field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN1smCause() string {
	if o == nil || IsNil(o.N1smCause) {
		var ret string
		return ret
	}
	return *o.N1smCause
}

// GetN1smCauseOk returns a tuple with the N1smCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN1smCauseOk() (*string, bool) {
	if o == nil || IsNil(o.N1smCause) {
		return nil, false
	}
	return o.N1smCause, true
}

// HasN1smCause returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN1smCause() bool {
	if o != nil && !IsNil(o.N1smCause) {
		return true
	}

	return false
}

// SetN1smCause gets a reference to the given string and assigns it to the N1smCause field.
func (o *VsmfUpdateData) SetN1smCause(v string) {
	o.N1smCause = &v
}

// GetBackOffTimer returns the BackOffTimer field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetBackOffTimer() int32 {
	if o == nil || IsNil(o.BackOffTimer) {
		var ret int32
		return ret
	}
	return *o.BackOffTimer
}

// GetBackOffTimerOk returns a tuple with the BackOffTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetBackOffTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.BackOffTimer) {
		return nil, false
	}
	return o.BackOffTimer, true
}

// HasBackOffTimer returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasBackOffTimer() bool {
	if o != nil && !IsNil(o.BackOffTimer) {
		return true
	}

	return false
}

// SetBackOffTimer gets a reference to the given int32 and assigns it to the BackOffTimer field.
func (o *VsmfUpdateData) SetBackOffTimer(v int32) {
	o.BackOffTimer = &v
}

func (o VsmfUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VsmfUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestIndication"] = o.RequestIndication
	if !IsNil(o.SessionAmbr) {
		toSerialize["sessionAmbr"] = o.SessionAmbr
	}
	if !IsNil(o.QosFlowsAddModRequestList) {
		toSerialize["qosFlowsAddModRequestList"] = o.QosFlowsAddModRequestList
	}
	if !IsNil(o.QosFlowsRelRequestList) {
		toSerialize["qosFlowsRelRequestList"] = o.QosFlowsRelRequestList
	}
	if !IsNil(o.EpsBearerInfo) {
		toSerialize["epsBearerInfo"] = o.EpsBearerInfo
	}
	if !IsNil(o.AssignEbiList) {
		toSerialize["assignEbiList"] = o.AssignEbiList
	}
	if !IsNil(o.RevokeEbiList) {
		toSerialize["revokeEbiList"] = o.RevokeEbiList
	}
	if !IsNil(o.ModifiedEbiList) {
		toSerialize["modifiedEbiList"] = o.ModifiedEbiList
	}
	if !IsNil(o.Pti) {
		toSerialize["pti"] = o.Pti
	}
	if !IsNil(o.N1SmInfoToUe) {
		toSerialize["n1SmInfoToUe"] = o.N1SmInfoToUe
	}
	if !IsNil(o.AlwaysOnGranted) {
		toSerialize["alwaysOnGranted"] = o.AlwaysOnGranted
	}
	if !IsNil(o.HsmfPduSessionUri) {
		toSerialize["hsmfPduSessionUri"] = o.HsmfPduSessionUri
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.Cause) {
		toSerialize["cause"] = o.Cause
	}
	if !IsNil(o.N1smCause) {
		toSerialize["n1smCause"] = o.N1smCause
	}
	if !IsNil(o.BackOffTimer) {
		toSerialize["backOffTimer"] = o.BackOffTimer
	}
	return toSerialize, nil
}

type NullableVsmfUpdateData struct {
	value *VsmfUpdateData
	isSet bool
}

func (v NullableVsmfUpdateData) Get() *VsmfUpdateData {
	return v.value
}

func (v *NullableVsmfUpdateData) Set(val *VsmfUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableVsmfUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableVsmfUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVsmfUpdateData(val *VsmfUpdateData) *NullableVsmfUpdateData {
	return &NullableVsmfUpdateData{value: val, isSet: true}
}

func (v NullableVsmfUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVsmfUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


