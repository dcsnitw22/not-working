/*
Nsmf_PDUSession

SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// checks if the SmContextRetrieveData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmContextRetrieveData{}

// SmContextRetrieveData struct for SmContextRetrieveData
type SmContextRetrieveData struct {
	TargetMmeCap *MmeCapabilities `json:"targetMmeCap,omitempty"`
}

// NewSmContextRetrieveData instantiates a new SmContextRetrieveData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmContextRetrieveData() *SmContextRetrieveData {
	this := SmContextRetrieveData{}
	return &this
}

// NewSmContextRetrieveDataWithDefaults instantiates a new SmContextRetrieveData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmContextRetrieveDataWithDefaults() *SmContextRetrieveData {
	this := SmContextRetrieveData{}
	return &this
}

// GetTargetMmeCap returns the TargetMmeCap field value if set, zero value otherwise.
func (o *SmContextRetrieveData) GetTargetMmeCap() MmeCapabilities {
	if o == nil || IsNil(o.TargetMmeCap) {
		var ret MmeCapabilities
		return ret
	}
	return *o.TargetMmeCap
}

// GetTargetMmeCapOk returns a tuple with the TargetMmeCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextRetrieveData) GetTargetMmeCapOk() (*MmeCapabilities, bool) {
	if o == nil || IsNil(o.TargetMmeCap) {
		return nil, false
	}
	return o.TargetMmeCap, true
}

// HasTargetMmeCap returns a boolean if a field has been set.
func (o *SmContextRetrieveData) HasTargetMmeCap() bool {
	if o != nil && !IsNil(o.TargetMmeCap) {
		return true
	}

	return false
}

// SetTargetMmeCap gets a reference to the given MmeCapabilities and assigns it to the TargetMmeCap field.
func (o *SmContextRetrieveData) SetTargetMmeCap(v MmeCapabilities) {
	o.TargetMmeCap = &v
}

func (o SmContextRetrieveData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmContextRetrieveData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetMmeCap) {
		toSerialize["targetMmeCap"] = o.TargetMmeCap
	}
	return toSerialize, nil
}

type NullableSmContextRetrieveData struct {
	value *SmContextRetrieveData
	isSet bool
}

func (v NullableSmContextRetrieveData) Get() *SmContextRetrieveData {
	return v.value
}

func (v *NullableSmContextRetrieveData) Set(val *SmContextRetrieveData) {
	v.value = val
	v.isSet = true
}

func (v NullableSmContextRetrieveData) IsSet() bool {
	return v.isSet
}

func (v *NullableSmContextRetrieveData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmContextRetrieveData(val *SmContextRetrieveData) *NullableSmContextRetrieveData {
	return &NullableSmContextRetrieveData{value: val, isSet: true}
}

func (v NullableSmContextRetrieveData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmContextRetrieveData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


