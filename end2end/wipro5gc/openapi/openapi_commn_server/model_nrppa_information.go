/*
 * Namf_Communication
 *
 * AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.0.8
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_commn_server

import "encoding/json"

type NrppaInformation struct {
	NfId string `json:"nfId"`

	NrppaPdu N2InfoContent `json:"nrppaPdu"`

	ServiceInstanceId string `json:"serviceInstanceId,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *NrppaInformation) UnmarshalJSON(data []byte) error {

	type Alias NrppaInformation // To avoid infinite recursion
	return json.Unmarshal(data, (*Alias)(m))
}

// AssertNrppaInformationRequired checks if the required fields are not zero-ed
func AssertNrppaInformationRequired(obj NrppaInformation) error {
	elements := map[string]interface{}{
		"nfId":     obj.NfId,
		"nrppaPdu": obj.NrppaPdu,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertN2InfoContentRequired(obj.NrppaPdu); err != nil {
		return err
	}
	return nil
}

// AssertNrppaInformationConstraints checks if the values respects the defined constraints
func AssertNrppaInformationConstraints(obj NrppaInformation) error {
	return nil
}
