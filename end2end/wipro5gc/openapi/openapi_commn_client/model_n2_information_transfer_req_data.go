/*
Namf_Communication

AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_commn_client

import (
	"encoding/json"
)

// checks if the N2InformationTransferReqData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N2InformationTransferReqData{}

// N2InformationTransferReqData struct for N2InformationTransferReqData
type N2InformationTransferReqData struct {
	TaiList []Tai `json:"taiList,omitempty"`
	RatSelector *RatSelector `json:"ratSelector,omitempty"`
	EcgiList []Ecgi `json:"ecgiList,omitempty"`
	NcgiList []Ncgi `json:"ncgiList,omitempty"`
	GlobalRanNodeList []*interface{} `json:"globalRanNodeList,omitempty"`
	N2Information N2InfoContainer `json:"n2Information"`
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewN2InformationTransferReqData instantiates a new N2InformationTransferReqData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN2InformationTransferReqData(n2Information N2InfoContainer) *N2InformationTransferReqData {
	this := N2InformationTransferReqData{}
	this.N2Information = n2Information
	return &this
}

// NewN2InformationTransferReqDataWithDefaults instantiates a new N2InformationTransferReqData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN2InformationTransferReqDataWithDefaults() *N2InformationTransferReqData {
	this := N2InformationTransferReqData{}
	return &this
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetTaiList() []Tai {
	if o == nil || IsNil(o.TaiList) {
		var ret []Tai
		return ret
	}
	return o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetTaiListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasTaiList() bool {
	if o != nil && !IsNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given []Tai and assigns it to the TaiList field.
func (o *N2InformationTransferReqData) SetTaiList(v []Tai) {
	o.TaiList = v
}

// GetRatSelector returns the RatSelector field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetRatSelector() RatSelector {
	if o == nil || IsNil(o.RatSelector) {
		var ret RatSelector
		return ret
	}
	return *o.RatSelector
}

// GetRatSelectorOk returns a tuple with the RatSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetRatSelectorOk() (*RatSelector, bool) {
	if o == nil || IsNil(o.RatSelector) {
		return nil, false
	}
	return o.RatSelector, true
}

// HasRatSelector returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasRatSelector() bool {
	if o != nil && !IsNil(o.RatSelector) {
		return true
	}

	return false
}

// SetRatSelector gets a reference to the given RatSelector and assigns it to the RatSelector field.
func (o *N2InformationTransferReqData) SetRatSelector(v RatSelector) {
	o.RatSelector = &v
}

// GetEcgiList returns the EcgiList field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetEcgiList() []Ecgi {
	if o == nil || IsNil(o.EcgiList) {
		var ret []Ecgi
		return ret
	}
	return o.EcgiList
}

// GetEcgiListOk returns a tuple with the EcgiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetEcgiListOk() ([]Ecgi, bool) {
	if o == nil || IsNil(o.EcgiList) {
		return nil, false
	}
	return o.EcgiList, true
}

// HasEcgiList returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasEcgiList() bool {
	if o != nil && !IsNil(o.EcgiList) {
		return true
	}

	return false
}

// SetEcgiList gets a reference to the given []Ecgi and assigns it to the EcgiList field.
func (o *N2InformationTransferReqData) SetEcgiList(v []Ecgi) {
	o.EcgiList = v
}

// GetNcgiList returns the NcgiList field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetNcgiList() []Ncgi {
	if o == nil || IsNil(o.NcgiList) {
		var ret []Ncgi
		return ret
	}
	return o.NcgiList
}

// GetNcgiListOk returns a tuple with the NcgiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetNcgiListOk() ([]Ncgi, bool) {
	if o == nil || IsNil(o.NcgiList) {
		return nil, false
	}
	return o.NcgiList, true
}

// HasNcgiList returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasNcgiList() bool {
	if o != nil && !IsNil(o.NcgiList) {
		return true
	}

	return false
}

// SetNcgiList gets a reference to the given []Ncgi and assigns it to the NcgiList field.
func (o *N2InformationTransferReqData) SetNcgiList(v []Ncgi) {
	o.NcgiList = v
}

// GetGlobalRanNodeList returns the GlobalRanNodeList field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetGlobalRanNodeList() []*interface{} {
	if o == nil || IsNil(o.GlobalRanNodeList) {
		var ret []*interface{}
		return ret
	}
	return o.GlobalRanNodeList
}

// GetGlobalRanNodeListOk returns a tuple with the GlobalRanNodeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetGlobalRanNodeListOk() ([]*interface{}, bool) {
	if o == nil || IsNil(o.GlobalRanNodeList) {
		return nil, false
	}
	return o.GlobalRanNodeList, true
}

// HasGlobalRanNodeList returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasGlobalRanNodeList() bool {
	if o != nil && !IsNil(o.GlobalRanNodeList) {
		return true
	}

	return false
}

// SetGlobalRanNodeList gets a reference to the given []*interface{} and assigns it to the GlobalRanNodeList field.
func (o *N2InformationTransferReqData) SetGlobalRanNodeList(v []*interface{}) {
	o.GlobalRanNodeList = v
}

// GetN2Information returns the N2Information field value
func (o *N2InformationTransferReqData) GetN2Information() N2InfoContainer {
	if o == nil {
		var ret N2InfoContainer
		return ret
	}

	return o.N2Information
}

// GetN2InformationOk returns a tuple with the N2Information field value
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetN2InformationOk() (*N2InfoContainer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N2Information, true
}

// SetN2Information sets field value
func (o *N2InformationTransferReqData) SetN2Information(v N2InfoContainer) {
	o.N2Information = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *N2InformationTransferReqData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InformationTransferReqData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *N2InformationTransferReqData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *N2InformationTransferReqData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o N2InformationTransferReqData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N2InformationTransferReqData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	if !IsNil(o.RatSelector) {
		toSerialize["ratSelector"] = o.RatSelector
	}
	if !IsNil(o.EcgiList) {
		toSerialize["ecgiList"] = o.EcgiList
	}
	if !IsNil(o.NcgiList) {
		toSerialize["ncgiList"] = o.NcgiList
	}
	if !IsNil(o.GlobalRanNodeList) {
		toSerialize["globalRanNodeList"] = o.GlobalRanNodeList
	}
	toSerialize["n2Information"] = o.N2Information
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableN2InformationTransferReqData struct {
	value *N2InformationTransferReqData
	isSet bool
}

func (v NullableN2InformationTransferReqData) Get() *N2InformationTransferReqData {
	return v.value
}

func (v *NullableN2InformationTransferReqData) Set(val *N2InformationTransferReqData) {
	v.value = val
	v.isSet = true
}

func (v NullableN2InformationTransferReqData) IsSet() bool {
	return v.isSet
}

func (v *NullableN2InformationTransferReqData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN2InformationTransferReqData(val *N2InformationTransferReqData) *NullableN2InformationTransferReqData {
	return &NullableN2InformationTransferReqData{value: val, isSet: true}
}

func (v NullableN2InformationTransferReqData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN2InformationTransferReqData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


