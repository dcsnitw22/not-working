/*
Namf_Communication

AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_commn_client

import (
	"encoding/json"
)

// checks if the N1MessageNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N1MessageNotification{}

// N1MessageNotification struct for N1MessageNotification
type N1MessageNotification struct {
	N1NotifySubscriptionId *string `json:"n1NotifySubscriptionId,omitempty"`
	N1MessageContainer N1MessageContainer `json:"n1MessageContainer"`
	LcsCorrelationId *string `json:"lcsCorrelationId,omitempty"`
	RegistrationCtxtContainer *RegistrationContextContainer `json:"registrationCtxtContainer,omitempty"`
}

// NewN1MessageNotification instantiates a new N1MessageNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN1MessageNotification(n1MessageContainer N1MessageContainer) *N1MessageNotification {
	this := N1MessageNotification{}
	this.N1MessageContainer = n1MessageContainer
	return &this
}

// NewN1MessageNotificationWithDefaults instantiates a new N1MessageNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN1MessageNotificationWithDefaults() *N1MessageNotification {
	this := N1MessageNotification{}
	return &this
}

// GetN1NotifySubscriptionId returns the N1NotifySubscriptionId field value if set, zero value otherwise.
func (o *N1MessageNotification) GetN1NotifySubscriptionId() string {
	if o == nil || IsNil(o.N1NotifySubscriptionId) {
		var ret string
		return ret
	}
	return *o.N1NotifySubscriptionId
}

// GetN1NotifySubscriptionIdOk returns a tuple with the N1NotifySubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1MessageNotification) GetN1NotifySubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.N1NotifySubscriptionId) {
		return nil, false
	}
	return o.N1NotifySubscriptionId, true
}

// HasN1NotifySubscriptionId returns a boolean if a field has been set.
func (o *N1MessageNotification) HasN1NotifySubscriptionId() bool {
	if o != nil && !IsNil(o.N1NotifySubscriptionId) {
		return true
	}

	return false
}

// SetN1NotifySubscriptionId gets a reference to the given string and assigns it to the N1NotifySubscriptionId field.
func (o *N1MessageNotification) SetN1NotifySubscriptionId(v string) {
	o.N1NotifySubscriptionId = &v
}

// GetN1MessageContainer returns the N1MessageContainer field value
func (o *N1MessageNotification) GetN1MessageContainer() N1MessageContainer {
	if o == nil {
		var ret N1MessageContainer
		return ret
	}

	return o.N1MessageContainer
}

// GetN1MessageContainerOk returns a tuple with the N1MessageContainer field value
// and a boolean to check if the value has been set.
func (o *N1MessageNotification) GetN1MessageContainerOk() (*N1MessageContainer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N1MessageContainer, true
}

// SetN1MessageContainer sets field value
func (o *N1MessageNotification) SetN1MessageContainer(v N1MessageContainer) {
	o.N1MessageContainer = v
}

// GetLcsCorrelationId returns the LcsCorrelationId field value if set, zero value otherwise.
func (o *N1MessageNotification) GetLcsCorrelationId() string {
	if o == nil || IsNil(o.LcsCorrelationId) {
		var ret string
		return ret
	}
	return *o.LcsCorrelationId
}

// GetLcsCorrelationIdOk returns a tuple with the LcsCorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1MessageNotification) GetLcsCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LcsCorrelationId) {
		return nil, false
	}
	return o.LcsCorrelationId, true
}

// HasLcsCorrelationId returns a boolean if a field has been set.
func (o *N1MessageNotification) HasLcsCorrelationId() bool {
	if o != nil && !IsNil(o.LcsCorrelationId) {
		return true
	}

	return false
}

// SetLcsCorrelationId gets a reference to the given string and assigns it to the LcsCorrelationId field.
func (o *N1MessageNotification) SetLcsCorrelationId(v string) {
	o.LcsCorrelationId = &v
}

// GetRegistrationCtxtContainer returns the RegistrationCtxtContainer field value if set, zero value otherwise.
func (o *N1MessageNotification) GetRegistrationCtxtContainer() RegistrationContextContainer {
	if o == nil || IsNil(o.RegistrationCtxtContainer) {
		var ret RegistrationContextContainer
		return ret
	}
	return *o.RegistrationCtxtContainer
}

// GetRegistrationCtxtContainerOk returns a tuple with the RegistrationCtxtContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1MessageNotification) GetRegistrationCtxtContainerOk() (*RegistrationContextContainer, bool) {
	if o == nil || IsNil(o.RegistrationCtxtContainer) {
		return nil, false
	}
	return o.RegistrationCtxtContainer, true
}

// HasRegistrationCtxtContainer returns a boolean if a field has been set.
func (o *N1MessageNotification) HasRegistrationCtxtContainer() bool {
	if o != nil && !IsNil(o.RegistrationCtxtContainer) {
		return true
	}

	return false
}

// SetRegistrationCtxtContainer gets a reference to the given RegistrationContextContainer and assigns it to the RegistrationCtxtContainer field.
func (o *N1MessageNotification) SetRegistrationCtxtContainer(v RegistrationContextContainer) {
	o.RegistrationCtxtContainer = &v
}

func (o N1MessageNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N1MessageNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.N1NotifySubscriptionId) {
		toSerialize["n1NotifySubscriptionId"] = o.N1NotifySubscriptionId
	}
	toSerialize["n1MessageContainer"] = o.N1MessageContainer
	if !IsNil(o.LcsCorrelationId) {
		toSerialize["lcsCorrelationId"] = o.LcsCorrelationId
	}
	if !IsNil(o.RegistrationCtxtContainer) {
		toSerialize["registrationCtxtContainer"] = o.RegistrationCtxtContainer
	}
	return toSerialize, nil
}

type NullableN1MessageNotification struct {
	value *N1MessageNotification
	isSet bool
}

func (v NullableN1MessageNotification) Get() *N1MessageNotification {
	return v.value
}

func (v *NullableN1MessageNotification) Set(val *N1MessageNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableN1MessageNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableN1MessageNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN1MessageNotification(val *N1MessageNotification) *NullableN1MessageNotification {
	return &NullableN1MessageNotification{value: val, isSet: true}
}

func (v NullableN1MessageNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN1MessageNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


