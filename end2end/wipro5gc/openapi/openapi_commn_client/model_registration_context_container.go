/*
Namf_Communication

AMF Communication Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_commn_client

import (
	"encoding/json"
)

// checks if the RegistrationContextContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationContextContainer{}

// RegistrationContextContainer struct for RegistrationContextContainer
type RegistrationContextContainer struct {
	UeContext UeContext `json:"ueContext"`
	LocalTimeZone *string `json:"localTimeZone,omitempty"`
	AnType AccessType `json:"anType"`
	AnN2ApId int32 `json:"anN2ApId"`
	RanNodeId interface{} `json:"ranNodeId"`
	InitialAmfName string `json:"initialAmfName"`
	UserLocation UserLocation `json:"userLocation"`
	RrcEstCause *string `json:"rrcEstCause,omitempty"`
	UeContextRequest *bool `json:"ueContextRequest,omitempty"`
	InitialAmfN2ApId *int32 `json:"initialAmfN2ApId,omitempty"`
	AnN2IPv4Addr *string `json:"anN2IPv4Addr,omitempty"`
	AnN2IPv6Addr *Ipv6Addr `json:"anN2IPv6Addr,omitempty"`
	AllowedNssai *AllowedNssai `json:"allowedNssai,omitempty"`
	ConfiguredNssai []ConfiguredSnssai `json:"configuredNssai,omitempty"`
	RejectedNssaiInPlmn []Snssai `json:"rejectedNssaiInPlmn,omitempty"`
	RejectedNssaiInTa []Snssai `json:"rejectedNssaiInTa,omitempty"`
}

// NewRegistrationContextContainer instantiates a new RegistrationContextContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationContextContainer(ueContext UeContext, anType AccessType, anN2ApId int32, ranNodeId interface{}, initialAmfName string, userLocation UserLocation) *RegistrationContextContainer {
	this := RegistrationContextContainer{}
	this.UeContext = ueContext
	this.AnType = anType
	this.AnN2ApId = anN2ApId
	this.RanNodeId = ranNodeId
	this.InitialAmfName = initialAmfName
	this.UserLocation = userLocation
	var ueContextRequest bool = false
	this.UeContextRequest = &ueContextRequest
	return &this
}

// NewRegistrationContextContainerWithDefaults instantiates a new RegistrationContextContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationContextContainerWithDefaults() *RegistrationContextContainer {
	this := RegistrationContextContainer{}
	var ueContextRequest bool = false
	this.UeContextRequest = &ueContextRequest
	return &this
}

// GetUeContext returns the UeContext field value
func (o *RegistrationContextContainer) GetUeContext() UeContext {
	if o == nil {
		var ret UeContext
		return ret
	}

	return o.UeContext
}

// GetUeContextOk returns a tuple with the UeContext field value
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetUeContextOk() (*UeContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UeContext, true
}

// SetUeContext sets field value
func (o *RegistrationContextContainer) SetUeContext(v UeContext) {
	o.UeContext = v
}

// GetLocalTimeZone returns the LocalTimeZone field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetLocalTimeZone() string {
	if o == nil || IsNil(o.LocalTimeZone) {
		var ret string
		return ret
	}
	return *o.LocalTimeZone
}

// GetLocalTimeZoneOk returns a tuple with the LocalTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetLocalTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.LocalTimeZone) {
		return nil, false
	}
	return o.LocalTimeZone, true
}

// HasLocalTimeZone returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasLocalTimeZone() bool {
	if o != nil && !IsNil(o.LocalTimeZone) {
		return true
	}

	return false
}

// SetLocalTimeZone gets a reference to the given string and assigns it to the LocalTimeZone field.
func (o *RegistrationContextContainer) SetLocalTimeZone(v string) {
	o.LocalTimeZone = &v
}

// GetAnType returns the AnType field value
func (o *RegistrationContextContainer) GetAnType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetAnTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnType, true
}

// SetAnType sets field value
func (o *RegistrationContextContainer) SetAnType(v AccessType) {
	o.AnType = v
}

// GetAnN2ApId returns the AnN2ApId field value
func (o *RegistrationContextContainer) GetAnN2ApId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AnN2ApId
}

// GetAnN2ApIdOk returns a tuple with the AnN2ApId field value
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetAnN2ApIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnN2ApId, true
}

// SetAnN2ApId sets field value
func (o *RegistrationContextContainer) SetAnN2ApId(v int32) {
	o.AnN2ApId = v
}

// GetRanNodeId returns the RanNodeId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *RegistrationContextContainer) GetRanNodeId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.RanNodeId
}

// GetRanNodeIdOk returns a tuple with the RanNodeId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistrationContextContainer) GetRanNodeIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RanNodeId) {
		return nil, false
	}
	return &o.RanNodeId, true
}

// SetRanNodeId sets field value
func (o *RegistrationContextContainer) SetRanNodeId(v interface{}) {
	o.RanNodeId = v
}

// GetInitialAmfName returns the InitialAmfName field value
func (o *RegistrationContextContainer) GetInitialAmfName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitialAmfName
}

// GetInitialAmfNameOk returns a tuple with the InitialAmfName field value
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetInitialAmfNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitialAmfName, true
}

// SetInitialAmfName sets field value
func (o *RegistrationContextContainer) SetInitialAmfName(v string) {
	o.InitialAmfName = v
}

// GetUserLocation returns the UserLocation field value
func (o *RegistrationContextContainer) GetUserLocation() UserLocation {
	if o == nil {
		var ret UserLocation
		return ret
	}

	return o.UserLocation
}

// GetUserLocationOk returns a tuple with the UserLocation field value
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetUserLocationOk() (*UserLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserLocation, true
}

// SetUserLocation sets field value
func (o *RegistrationContextContainer) SetUserLocation(v UserLocation) {
	o.UserLocation = v
}

// GetRrcEstCause returns the RrcEstCause field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetRrcEstCause() string {
	if o == nil || IsNil(o.RrcEstCause) {
		var ret string
		return ret
	}
	return *o.RrcEstCause
}

// GetRrcEstCauseOk returns a tuple with the RrcEstCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetRrcEstCauseOk() (*string, bool) {
	if o == nil || IsNil(o.RrcEstCause) {
		return nil, false
	}
	return o.RrcEstCause, true
}

// HasRrcEstCause returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasRrcEstCause() bool {
	if o != nil && !IsNil(o.RrcEstCause) {
		return true
	}

	return false
}

// SetRrcEstCause gets a reference to the given string and assigns it to the RrcEstCause field.
func (o *RegistrationContextContainer) SetRrcEstCause(v string) {
	o.RrcEstCause = &v
}

// GetUeContextRequest returns the UeContextRequest field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetUeContextRequest() bool {
	if o == nil || IsNil(o.UeContextRequest) {
		var ret bool
		return ret
	}
	return *o.UeContextRequest
}

// GetUeContextRequestOk returns a tuple with the UeContextRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetUeContextRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.UeContextRequest) {
		return nil, false
	}
	return o.UeContextRequest, true
}

// HasUeContextRequest returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasUeContextRequest() bool {
	if o != nil && !IsNil(o.UeContextRequest) {
		return true
	}

	return false
}

// SetUeContextRequest gets a reference to the given bool and assigns it to the UeContextRequest field.
func (o *RegistrationContextContainer) SetUeContextRequest(v bool) {
	o.UeContextRequest = &v
}

// GetInitialAmfN2ApId returns the InitialAmfN2ApId field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetInitialAmfN2ApId() int32 {
	if o == nil || IsNil(o.InitialAmfN2ApId) {
		var ret int32
		return ret
	}
	return *o.InitialAmfN2ApId
}

// GetInitialAmfN2ApIdOk returns a tuple with the InitialAmfN2ApId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetInitialAmfN2ApIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialAmfN2ApId) {
		return nil, false
	}
	return o.InitialAmfN2ApId, true
}

// HasInitialAmfN2ApId returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasInitialAmfN2ApId() bool {
	if o != nil && !IsNil(o.InitialAmfN2ApId) {
		return true
	}

	return false
}

// SetInitialAmfN2ApId gets a reference to the given int32 and assigns it to the InitialAmfN2ApId field.
func (o *RegistrationContextContainer) SetInitialAmfN2ApId(v int32) {
	o.InitialAmfN2ApId = &v
}

// GetAnN2IPv4Addr returns the AnN2IPv4Addr field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetAnN2IPv4Addr() string {
	if o == nil || IsNil(o.AnN2IPv4Addr) {
		var ret string
		return ret
	}
	return *o.AnN2IPv4Addr
}

// GetAnN2IPv4AddrOk returns a tuple with the AnN2IPv4Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetAnN2IPv4AddrOk() (*string, bool) {
	if o == nil || IsNil(o.AnN2IPv4Addr) {
		return nil, false
	}
	return o.AnN2IPv4Addr, true
}

// HasAnN2IPv4Addr returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasAnN2IPv4Addr() bool {
	if o != nil && !IsNil(o.AnN2IPv4Addr) {
		return true
	}

	return false
}

// SetAnN2IPv4Addr gets a reference to the given string and assigns it to the AnN2IPv4Addr field.
func (o *RegistrationContextContainer) SetAnN2IPv4Addr(v string) {
	o.AnN2IPv4Addr = &v
}

// GetAnN2IPv6Addr returns the AnN2IPv6Addr field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetAnN2IPv6Addr() Ipv6Addr {
	if o == nil || IsNil(o.AnN2IPv6Addr) {
		var ret Ipv6Addr
		return ret
	}
	return *o.AnN2IPv6Addr
}

// GetAnN2IPv6AddrOk returns a tuple with the AnN2IPv6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetAnN2IPv6AddrOk() (*Ipv6Addr, bool) {
	if o == nil || IsNil(o.AnN2IPv6Addr) {
		return nil, false
	}
	return o.AnN2IPv6Addr, true
}

// HasAnN2IPv6Addr returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasAnN2IPv6Addr() bool {
	if o != nil && !IsNil(o.AnN2IPv6Addr) {
		return true
	}

	return false
}

// SetAnN2IPv6Addr gets a reference to the given Ipv6Addr and assigns it to the AnN2IPv6Addr field.
func (o *RegistrationContextContainer) SetAnN2IPv6Addr(v Ipv6Addr) {
	o.AnN2IPv6Addr = &v
}

// GetAllowedNssai returns the AllowedNssai field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetAllowedNssai() AllowedNssai {
	if o == nil || IsNil(o.AllowedNssai) {
		var ret AllowedNssai
		return ret
	}
	return *o.AllowedNssai
}

// GetAllowedNssaiOk returns a tuple with the AllowedNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetAllowedNssaiOk() (*AllowedNssai, bool) {
	if o == nil || IsNil(o.AllowedNssai) {
		return nil, false
	}
	return o.AllowedNssai, true
}

// HasAllowedNssai returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasAllowedNssai() bool {
	if o != nil && !IsNil(o.AllowedNssai) {
		return true
	}

	return false
}

// SetAllowedNssai gets a reference to the given AllowedNssai and assigns it to the AllowedNssai field.
func (o *RegistrationContextContainer) SetAllowedNssai(v AllowedNssai) {
	o.AllowedNssai = &v
}

// GetConfiguredNssai returns the ConfiguredNssai field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetConfiguredNssai() []ConfiguredSnssai {
	if o == nil || IsNil(o.ConfiguredNssai) {
		var ret []ConfiguredSnssai
		return ret
	}
	return o.ConfiguredNssai
}

// GetConfiguredNssaiOk returns a tuple with the ConfiguredNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetConfiguredNssaiOk() ([]ConfiguredSnssai, bool) {
	if o == nil || IsNil(o.ConfiguredNssai) {
		return nil, false
	}
	return o.ConfiguredNssai, true
}

// HasConfiguredNssai returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasConfiguredNssai() bool {
	if o != nil && !IsNil(o.ConfiguredNssai) {
		return true
	}

	return false
}

// SetConfiguredNssai gets a reference to the given []ConfiguredSnssai and assigns it to the ConfiguredNssai field.
func (o *RegistrationContextContainer) SetConfiguredNssai(v []ConfiguredSnssai) {
	o.ConfiguredNssai = v
}

// GetRejectedNssaiInPlmn returns the RejectedNssaiInPlmn field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetRejectedNssaiInPlmn() []Snssai {
	if o == nil || IsNil(o.RejectedNssaiInPlmn) {
		var ret []Snssai
		return ret
	}
	return o.RejectedNssaiInPlmn
}

// GetRejectedNssaiInPlmnOk returns a tuple with the RejectedNssaiInPlmn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetRejectedNssaiInPlmnOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.RejectedNssaiInPlmn) {
		return nil, false
	}
	return o.RejectedNssaiInPlmn, true
}

// HasRejectedNssaiInPlmn returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasRejectedNssaiInPlmn() bool {
	if o != nil && !IsNil(o.RejectedNssaiInPlmn) {
		return true
	}

	return false
}

// SetRejectedNssaiInPlmn gets a reference to the given []Snssai and assigns it to the RejectedNssaiInPlmn field.
func (o *RegistrationContextContainer) SetRejectedNssaiInPlmn(v []Snssai) {
	o.RejectedNssaiInPlmn = v
}

// GetRejectedNssaiInTa returns the RejectedNssaiInTa field value if set, zero value otherwise.
func (o *RegistrationContextContainer) GetRejectedNssaiInTa() []Snssai {
	if o == nil || IsNil(o.RejectedNssaiInTa) {
		var ret []Snssai
		return ret
	}
	return o.RejectedNssaiInTa
}

// GetRejectedNssaiInTaOk returns a tuple with the RejectedNssaiInTa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationContextContainer) GetRejectedNssaiInTaOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.RejectedNssaiInTa) {
		return nil, false
	}
	return o.RejectedNssaiInTa, true
}

// HasRejectedNssaiInTa returns a boolean if a field has been set.
func (o *RegistrationContextContainer) HasRejectedNssaiInTa() bool {
	if o != nil && !IsNil(o.RejectedNssaiInTa) {
		return true
	}

	return false
}

// SetRejectedNssaiInTa gets a reference to the given []Snssai and assigns it to the RejectedNssaiInTa field.
func (o *RegistrationContextContainer) SetRejectedNssaiInTa(v []Snssai) {
	o.RejectedNssaiInTa = v
}

func (o RegistrationContextContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationContextContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ueContext"] = o.UeContext
	if !IsNil(o.LocalTimeZone) {
		toSerialize["localTimeZone"] = o.LocalTimeZone
	}
	toSerialize["anType"] = o.AnType
	toSerialize["anN2ApId"] = o.AnN2ApId
	if o.RanNodeId != nil {
		toSerialize["ranNodeId"] = o.RanNodeId
	}
	toSerialize["initialAmfName"] = o.InitialAmfName
	toSerialize["userLocation"] = o.UserLocation
	if !IsNil(o.RrcEstCause) {
		toSerialize["rrcEstCause"] = o.RrcEstCause
	}
	if !IsNil(o.UeContextRequest) {
		toSerialize["ueContextRequest"] = o.UeContextRequest
	}
	if !IsNil(o.InitialAmfN2ApId) {
		toSerialize["initialAmfN2ApId"] = o.InitialAmfN2ApId
	}
	if !IsNil(o.AnN2IPv4Addr) {
		toSerialize["anN2IPv4Addr"] = o.AnN2IPv4Addr
	}
	if !IsNil(o.AnN2IPv6Addr) {
		toSerialize["anN2IPv6Addr"] = o.AnN2IPv6Addr
	}
	if !IsNil(o.AllowedNssai) {
		toSerialize["allowedNssai"] = o.AllowedNssai
	}
	if !IsNil(o.ConfiguredNssai) {
		toSerialize["configuredNssai"] = o.ConfiguredNssai
	}
	if !IsNil(o.RejectedNssaiInPlmn) {
		toSerialize["rejectedNssaiInPlmn"] = o.RejectedNssaiInPlmn
	}
	if !IsNil(o.RejectedNssaiInTa) {
		toSerialize["rejectedNssaiInTa"] = o.RejectedNssaiInTa
	}
	return toSerialize, nil
}

type NullableRegistrationContextContainer struct {
	value *RegistrationContextContainer
	isSet bool
}

func (v NullableRegistrationContextContainer) Get() *RegistrationContextContainer {
	return v.value
}

func (v *NullableRegistrationContextContainer) Set(val *RegistrationContextContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationContextContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationContextContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationContextContainer(val *RegistrationContextContainer) *NullableRegistrationContextContainer {
	return &NullableRegistrationContextContainer{value: val, isSet: true}
}

func (v NullableRegistrationContextContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationContextContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


