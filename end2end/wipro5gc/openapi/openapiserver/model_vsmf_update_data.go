/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.0.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapiserver

import (
	"encoding/json"
	"errors"
)

type VsmfUpdateData struct {
	RequestIndication RequestIndication `json:"requestIndication"`

	SessionAmbr Ambr `json:"sessionAmbr,omitempty"`

	QosFlowsAddModRequestList []QosFlowAddModifyRequestItem `json:"qosFlowsAddModRequestList,omitempty"`

	QosFlowsRelRequestList []QosFlowReleaseRequestItem `json:"qosFlowsRelRequestList,omitempty"`

	EpsBearerInfo []EpsBearerInfo `json:"epsBearerInfo,omitempty"`

	AssignEbiList []Arp `json:"assignEbiList,omitempty"`

	RevokeEbiList []int32 `json:"revokeEbiList,omitempty"`

	ModifiedEbiList []EbiArpMapping `json:"modifiedEbiList,omitempty"`

	Pti int32 `json:"pti,omitempty"`

	N1SmInfoToUe RefToBinaryData `json:"n1SmInfoToUe,omitempty"`

	AlwaysOnGranted bool `json:"alwaysOnGranted,omitempty"`

	HsmfPduSessionUri string `json:"hsmfPduSessionUri,omitempty"`

	SupportedFeatures string `json:"supportedFeatures,omitempty"`

	Cause Cause `json:"cause,omitempty"`

	N1smCause string `json:"n1smCause,omitempty"`

	BackOffTimer int32 `json:"backOffTimer,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *VsmfUpdateData) UnmarshalJSON(data []byte) error {
	m.AlwaysOnGranted = false

	type Alias VsmfUpdateData // To avoid infinite recursion
	return json.Unmarshal(data, (*Alias)(m))
}

// AssertVsmfUpdateDataRequired checks if the required fields are not zero-ed
func AssertVsmfUpdateDataRequired(obj VsmfUpdateData) error {
	elements := map[string]interface{}{
		"requestIndication": obj.RequestIndication,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertRequestIndicationRequired(obj.RequestIndication); err != nil {
		return err
	}
	if err := AssertAmbrRequired(obj.SessionAmbr); err != nil {
		return err
	}
	for _, el := range obj.QosFlowsAddModRequestList {
		if err := AssertQosFlowAddModifyRequestItemRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.QosFlowsRelRequestList {
		if err := AssertQosFlowReleaseRequestItemRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.EpsBearerInfo {
		if err := AssertEpsBearerInfoRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.AssignEbiList {
		if err := AssertArpRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ModifiedEbiList {
		if err := AssertEbiArpMappingRequired(el); err != nil {
			return err
		}
	}
	if err := AssertRefToBinaryDataRequired(obj.N1SmInfoToUe); err != nil {
		return err
	}
	if err := AssertCauseRequired(obj.Cause); err != nil {
		return err
	}
	return nil
}

// AssertVsmfUpdateDataConstraints checks if the values respects the defined constraints
func AssertVsmfUpdateDataConstraints(obj VsmfUpdateData) error {
	if obj.Pti < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Pti > 255 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
