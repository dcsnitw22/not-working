/*
 * Nsmf_PDUSession
 *
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.0.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapiserver

import (
	"encoding/json"
	"errors"
)

type GnbId struct {
	BitLength int32 `json:"bitLength"`

	GNBValue string `json:"gNBValue"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *GnbId) UnmarshalJSON(data []byte) error {

	type Alias GnbId // To avoid infinite recursion
	return json.Unmarshal(data, (*Alias)(m))
}

// AssertGnbIdRequired checks if the required fields are not zero-ed
func AssertGnbIdRequired(obj GnbId) error {
	elements := map[string]interface{}{
		"bitLength": obj.BitLength,
		"gNBValue":  obj.GNBValue,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertGnbIdConstraints checks if the values respects the defined constraints
func AssertGnbIdConstraints(obj GnbId) error {
	if obj.BitLength < 22 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.BitLength > 32 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
